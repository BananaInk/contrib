
local face_landmarks = {
    top=10,
    bottom=152,
    left=323,
    right=93,
}

for i=0,467 do
    face_landmarks["L"..i]=i
end


-- https://raw.githubusercontent.com/google/mediapipe/a908d668c730da128dfa8d9f6bd25d519d006692/mediapipe/modules/face_geometry/data/canonical_face_model_uv_visualization.png
-- center points, left points, then mirrored right points
-- CENTER POINTS
-- all on the center line, bottom to top
-- NONCENTER POINTS:
-- inner eye corner
-- outer eye corner
-- eye top
-- eye bottom
-- eyebrow inner
-- eyebrow middle
-- eyebrow outer
-- nose corner
-- mouth corner
-- upper lip quarter
-- lower lip quarter
-- jowl end
-- jowl mid
local face_points = {
{
    175,
    18,
    17,
    14,
    13,
    0,
    164,
    2,
    1,
    6,
    9
},
{
    133,
    33,
    159, 
    145, 
    107, 
    105,
    70, 
    98, 
    78, 
    81, 
    178, 
    212,
    205
},
 {
   362,
   263,
    386,
     374,
     336,
  334,
    300,
    327,
    308,
     311,
    402,
    432,
    425
}
}

local test_expression = nil --"grin"
GPS_Expressions = {
    idle={},
    jawopen={
        jaw_drop=2,
    },
    supersoy={
        jaw_drop=2,
        right_corner_puller=2,
        left_corner_puller=2,
        right_lid_raiser = 1,
        left_lid_raiser = 1,
        right_mouth_drop=2,
        left_mouth_drop=2,
        smile=0.5,
        right_inner_raiser=1,
        left_inner_raiser=1
    },
    soy={
        jaw_drop=2,
        right_mouth_drop=2,
        left_mouth_drop=2
    },
    soy={
        jaw_drop=2,
        right_mouth_drop=2,
        left_mouth_drop=2
    },
    pucker = {
        right_puckerer = 1.5,
        left_puckerer = 1.5,
    },
    funnel = {
        right_funneler= 1,
        left_funneler= 1,
    },
    smile= {
        right_upper_raiser=1,
        left_upper_raiser=1,
        right_corner_puller=1,
        left_corner_puller=1,
        right_part=0.5,
        left_part=0.5,
        smile=1,
        -- right_stretcher=1,
        -- left_stretcher=1,
        -- right_mouth_drop=2,
        -- left_mouth_drop=2
    },
    grin = {
        -- right_upper_raiser=1,
        -- left_upper_raiser=1,
        -- right_corner_puller=1,
        -- left_corner_puller=1,
        -- right_mouth_drop=2,
        -- left_mouth_drop=2,
        -- right_part=2,
        -- left_part=2,
        -- right_stretcher = 2,
        -- left_stretcher=2,
	    -- lower_lip=2,
        smile = 2,
        jaw_clencher=0.5,
        eyelookdown=0.2
    },
    bigeyes = {
        right_lid_raiser = 1,
        left_lid_raiser = 1,
    },
    l_blink = {
        left_lid_tightener=1,
        left_lid_droop=1,
        left_lid_closer=2,
    },
    blink = {
        right_lid_tightener=1,
        left_lid_tightener=1,
        right_lid_droop=1,
        left_lid_droop=1,
        right_lid_closer=1,
        left_lid_closer=1,
        half_closed=1,
        blink=1
    },
    angryeyes = {
        right_outer_raiser=1,
        left_outer_raiser=1,
        right_lowerer=1,
        left_lowerer=1
    },
    scaredeyes = {
        right_inner_raiser=2,
        left_inner_raiser=2
    }
}


-- 0	right_lid_raiser
-- 1	left_lid_raiser
-- 2	right_lid_tightener
-- 3	left_lid_tightener
-- 4	right_lid_droop
-- 5	left_lid_droop
-- 6	right_lid_closer
-- 7	left_lid_closer
-- 8	half_closed
-- 9	blink
-- 10	right_inner_raiser
-- 11	left_inner_raiser
-- 12	right_outer_raiser
-- 13	left_outer_raiser
-- 14	right_lowerer
-- 15	left_lowerer
-- 16	right_cheek_raiser
-- 17	left_cheek_raiser
-- 18	wrinkler
-- 19	dilator
-- 20	right_upper_raiser
-- 21	left_upper_raiser
-- 22	right_corner_puller
-- 23	left_corner_puller
-- 24	right_corner_depressor
-- 25	left_corner_depressor
-- 26	chin_raiser
-- 27	right_part
-- 28	left_part
-- 29	right_puckerer
-- 30	left_puckerer
-- 31	right_funneler
-- 32	left_funneler
-- 33	right_stretcher
-- 34	left_stretcher
-- 35	bite
-- 36	presser
-- 37	tightener
-- 38	jaw_clencher
-- 39	jaw_drop
-- 40	right_mouth_drop
-- 41	left_mouth_drop
-- 42	smile
-- 43	lower_lip

    -- ,"pucker":["[1.3229 0.0172 -0.7065]","[1.5214 0.001 -0.1697]","[1.2879 0.0094 -0.3254]","[1.3651 -0.0843 0.3141]","[1.5452 -0.0007 -0.0199]","[1.4959 -0.0022 0.1763]","[1.2096 0.0012 0.6502]","[0.8283 -0.6644 0.682]","[1.1256 0.0034 1.0098]","[1.1328 0.0044 1.2004]","[0.982 0.0088 1.8353]","[1.3138 0.0184 -0.7864]","[1.2824 0.0189 -0.8525]","[1.2403 0.0191 -0.8862]","[1.2074 0.0214 -0.9954]","[1.2248 0.0224 -1.0738]","[1.2449 0.0217 -1.1651]","[1.2272 0.0216 -1.2511]","[1.1301 0.0186 -1.3337]","[1.4766 0.0022 -0.244]","[1.3426 -0.0896 -0.2404]","[0.3511 -0.9842 1.1892]","[0.9346 -0.3977 0.5683]","[0.9295 -0.4896 0.5518]","[0.9032 -0.5777 0.55]","[0.8198 -0.6955 0.6271]","[0.9235 -0.3199 0.6074]","[0.9501 -0.5326 0.9333]","[0.9481 -0.4273 0.9288]","[0.9217 -0.6266 0.9069]","[0.8848 -0.6873 0.8534]","[0.7793 -0.7648 0.5187]","[1.0223 -0.3407 -1.4571]","[0.7968 -0.6987 0.7198]","[0.3556 -1.0216 0.5922]","[0.677 -0.8691 0.6212]","[1.0565 -0.4524 -0.07]","[1.306 -0.0952 -0.6868]","[1.2678 -0.0674 -0.8584]","[1.2539 -0.2059 -0.7566]","[1.1917 -0.2639 -0.8426]","[1.2339 -0.1449 -0.8819]","[1.1753 -0.198 -0.9163]","[1.0474 -0.392 -1.0832]","[1.5107 -0.081 -0.167]","[1.5325 -0.0982 -0.0251]","[0.8474 -0.8274 0.9869]","[1.0573 -0.282 0.3164]","[1.2678 -0.3069 -0.1474]","[1.2339 -0.3156 -0.0691]","[0.9404 -0.7057 -0.0627]","[1.4651 -0.0922 0.1582]","[1.0016 -0.6183 1.1492]","[0.9317 -0.7436 1.0921]","[0.5217 -0.9037 1.4383]","[1.0897 -0.2022 1.0514]","[0.9231 -0.3348 0.8839]","[1.02 -0.4467 -0.9469]","[0.1769 -0.9049 -0.7097]","[1.2346 -0.232 -0.2265]","[1.2505 -0.1525 -0.2693]","[1.0466 -0.3311 -0.9919]","[1.0748 -0.2842 -0.9753]","[0.8788 -0.7936 1.1796]","[1.218 -0.3055 -0.22]","[1.0548 -0.4423 1.1496]","[1.0679 -0.4609 1.2609]","[0.8638 -0.5377 1.766]","[0.7242 -0.8479 1.3114]","[0.9725 -0.4893 1.5156]","[0.76 -0.8778 1.0447]","[0.5675 -0.9307 1.11]","[1.2999 -0.0832 -0.7833]","[1.2502 -0.1718 -0.8324]","[1.1926 -0.2315 -0.8824]","[1.2189 -0.2061 -0.2556]","[1.0627 -0.3061 -0.9906]","[1.1153 -0.2844 -1.0175]","[1.0782 -0.2748 -0.9555]","[1.3689 -0.1857 -0.1641]","[1.1601 -0.1762 -0.9088]","[1.1982 -0.1221 -0.895]","[1.2295 -0.0543 -0.8869]","[1.126 -0.1089 -1.3293]","[1.2208 -0.1027 -1.2397]","[1.2353 -0.0921 -1.1519]","[1.2145 -0.0778 -1.0574]","[1.1972 -0.0671 -0.9928]","[1.1396 -0.2008 -0.9818]","[1.1547 -0.2197 -1.0084]","[1.1682 -0.2497 -1.0547]","[1.1539 -0.2756 -1.1009]","[1.1494 -0.3538 -0.6436]","[0 -0.9999 -0.0137]","[1.3518 0.0072 -0.2744]","[1.1056 -0.2357 -0.9755]","[1.1153 -0.2572 -0.9948]","[1.2603 -0.1166 -0.3352]","[1.1542 -0.2641 -0.3163]","[1.2576 -0.1347 -0.3035]","[1.0276 -0.3741 0.2244]","[1.0034 -0.5124 0.1153]","[1.1836 -0.3255 -0.1408]","[0.7054 -0.765 1.636]","[0.8536 -0.7096 1.4531]","[0.9759 -0.6524 1.2571]","[1.0875 -0.3228 -1.1667]","[1.1174 -0.2327 1.234]","[1.0423 -0.2564 1.5217]","[0.9569 -0.2875 1.8246]","[0.8602 -0.6521 0.5739]","[0.7323 -0.8595 0.4086]","[0.9083 -0.2679 0.6477]","[0.8052 -0.7808 0.804]","[1.0881 -0.2177 0.4154]","[1.3597 -0.2518 -0.0814]","[0.636 -0.9525 0.3141]","[0.8252 -0.7965 0.2991]","[0.9153 -0.6778 0.2446]","[0.9586 -0.5034 0.2812]","[0.9754 -0.3797 0.3539]","[0.998 -0.286 0.4287]","[1.1742 -0.0906 0.613]","[0.6816 -0.9227 0.0067]","[0.7583 -0.8549 0.8228]","[1.4701 -0.0486 -0.2393]","[1.1047 -0.2753 0.1683]","[0.0377 -1.0303 0.6024]","[1.0085 -0.2126 0.5094]","[1.0875 -0.3264 -0.1533]","[0.7804 -0.7285 0.7124]","[1.3174 -0.2576 0.0124]","[0.0618 -0.9734 -0.3484]","[0.8806 -0.269 0.7045]","[1.4094 -0.1781 0.1031]","[0.6816 -0.7149 -1.0971]","[0.5249 -0.7208 -1.2327]","[0.3416 -1.0084 -0.006]","[0.5609 -0.8141 -0.8867]","[0.4339 -0.9767 0.872]","[0.9708 -0.3713 -1.588]","[1.3439 -0.0329 -0.271]","[1.0722 -0.353 0.0512]","[0.5842 -0.9434 0.5945]","[0.8867 -0.5711 0.6407]","[0.9113 -0.4909 0.6336]","[1.0998 -0.3123 -1.0418]","[0.6639 -0.8864 -0.2744]","[0.9525 -0.2021 -1.7922]","[0.7706 -0.488 -1.5745]","[0.6647 -0.601 -1.4334]","[1.0647 0.007 1.5121]","[0.982 0.0088 -1.8197]","[0.9154 -0.4131 0.6459]","[0.9029 -0.3392 0.6721]","[0.8832 -0.2916 0.6889]","[0.6588 -0.9152 0.8479]","[0.9095 -0.3507 0.7962]","[0.9242 -0.4343 0.829]","[0.9184 -0.5172 0.8325]","[0.8964 -0.5995 0.8065]","[0.8668 -0.6489 0.7694]","[0.1706 -1.0218 0.9271]","[0.8562 -0.6255 0.6597]","[1.2754 0.0127 -0.4433]","[1.1871 -0.2922 -0.5422]","[1.2701 -0.2356 -0.1983]","[1.2664 -0.1195 -0.4711]","[1.1292 0.0013 0.8322]","[0.7757 -0.6128 -1.2927]","[0.8678 -0.4998 -1.4401]","[1.0614 -0.2037 -1.6996]","[0.3477 -0.8156 -1.0086]","[0.8932 -0.2945 0.7413]","[1.2191 -0.1563 0.3764]","[1.0878 0.0092 -1.7263]","[0.8797 -0.3603 -1.7012]","[0.3701 -0.9703 -0.3162]","[1.1714 -0.1417 -0.9865]","[1.1881 -0.1603 -1.0338]","[1.2041 -0.185 -1.1048]","[1.1936 -0.2041 -1.1818]","[1.1221 -0.2337 -1.2577]","[1.1238 -0.2451 -0.9462]","[1.124 -0.2775 -0.938]","[1.122 -0.3081 -0.9152]","[1.0893 -0.405 -0.7889]","[0.855 -0.7538 -0.363]","[1.1233 -0.1529 0.5242]","[0.9433 -0.1945 0.8024]","[0.9101 -0.2528 0.784]","[1.1128 -0.2224 -0.9224]","[0.7285 -0.7615 -0.7036]","[1.0634 -0.1183 0.8111]","[1.0625 -0.2882 -1.3443]","[1.3967 -0.0007 0.3393]","[1.2784 -0.0907 0.4564]","[1.2997 0.0002 0.4895]","[1.2281 -0.2244 0.141]","[1.1299 0.011 -1.5905]","[1.1234 0.0149 -1.4448]","[1.1044 -0.1415 -1.4317]","[0.9798 -0.4938 -1.0923]","[1.0731 -0.3928 -0.2759]","[1.0194 -0.4065 -1.2344]","[1.0253 -0.5703 -0.2487]","[1.0699 -0.4533 -0.4295]","[0.9629 -0.6301 -0.4869]","[1.1025 -0.181 -1.5684]","[1.1631 -0.2804 0.0518]","[0.8851 -0.5792 -1.1635]","[0.9404 -0.4646 -1.3176]","[0.9632 -0.5497 -0.9159]","[0.6396 -0.8537 -0.5151]","[0.8623 -0.6626 -0.8932]","[0.4258 -0.9137 -0.608]","[1.0364 -0.5022 -0.6442]","[1.1576 -0.2151 0.2753]","[1.3853 -0.2179 -0.1426]","[1.2811 -0.276 -0.1911]","[1.4509 -0.18 -0.0444]","[0.9654 -0.2714 0.9305]","[0.979 -0.4283 1.0034]","[0.9723 -0.5652 1.0101]","[0.9357 -0.6748 0.9806]","[0.8804 -0.7466 0.9149]","[0.7445 -0.789 0.6656]","[0.345 -1.03 0.2968]","[0.8312 -0.7155 0.4565]","[0.8925 -0.6225 0.4165]","[0.9323 -0.5015 0.4279]","[0.9451 -0.3866 0.4701]","[0.948 -0.2968 0.5233]","[0.9504 -0.2332 0.5719]","[-0.0132 -1.014 0.296]","[1.2359 -0.2707 -0.2369]","[1.3013 -0.1582 0.2436]","[1.4622 -0.1506 -0.1467]","[1.4284 -0.0974 -0.2159]","[1.4164 -0.1489 -0.1697]","[1.2062 -0.2391 -0.2853]","[1.4554 -0.0792 -0.2303]","[1.3434 -0.0668 -0.2624]","[0.8956 -0.2338 0.6941]","[0.9563 -0.1817 0.6537]","[1.0262 -0.1558 0.6266]","[0.8362 -0.6773 0.7421]","[0.8307 -0.729 0.7965]","[1.3654 0.0831 0.316]","[0.8373 0.6698 0.688]","[1.3465 0.1014 -0.2348]","[0.356 0.9838 1.1975]","[0.938 0.3993 0.5715]","[0.9338 0.4896 0.5572]","[0.9098 0.5787 0.558]","[0.8269 0.6959 0.6355]","[0.9274 0.3239 0.6093]","[0.9573 0.5328 0.9271]","[0.9556 0.4307 0.9218]","[0.9301 0.6261 0.9014]","[0.8944 0.6868 0.8516]","[0.79 0.762 0.5335]","[1.0324 0.3561 -1.4362]","[0.8057 0.7042 0.7242]","[0.3605 1.0145 0.6102]","[0.6876 0.864 0.6358]","[1.0685 0.4581 -0.0502]","[1.3071 0.1273 -0.6778]","[1.2686 0.1037 -0.8505]","[1.2553 0.238 -0.7349]","[1.1937 0.2985 -0.8125]","[1.2345 0.1799 -0.865]","[1.1751 0.235 -0.8923]","[1.0564 0.4215 -1.049]","[1.514 0.0817 -0.163]","[1.5353 0.0949 -0.0218]","[0.8595 0.821 0.9862]","[1.0623 0.285 0.3235]","[1.2751 0.3112 -0.1308]","[1.2417 0.3181 -0.0523]","[0.9508 0.7012 -0.034]","[1.4666 0.089 0.1604]","[1.0202 0.6186 1.134]","[0.9497 0.7394 1.0842]","[0.5292 0.9065 1.4412]","[1.0976 0.2096 1.0408]","[0.9276 0.3432 0.8775]","[1.0268 0.4758 -0.9086]","[0.1766 0.8943 -0.6725]","[1.2432 0.2443 -0.2115]","[1.2598 0.1681 -0.2588]","[1.0467 0.3713 -0.9544]","[1.074 0.3214 -0.9412]","[0.8954 0.7894 1.1713]","[1.2271 0.3134 -0.2014]","[1.0715 0.4472 1.1349]","[1.0826 0.4653 1.2472]","[0.8715 0.5493 1.7653]","[0.7371 0.8464 1.3113]","[0.9824 0.4993 1.5083]","[0.7714 0.8725 1.0467]","[0.5751 0.9289 1.1156]","[1.3014 0.1182 -0.7747]","[1.2516 0.2069 -0.8127]","[1.194 0.2683 -0.8557]","[1.2273 0.2204 -0.242]","[1.0631 0.3453 -0.9541]","[1.1179 0.3209 -0.9861]","[1.0763 0.3097 -0.9233]","[1.3713 0.19 -0.1549]","[1.1584 0.2104 -0.8874]","[1.1979 0.1572 -0.881]","[1.2287 0.0898 -0.8797]","[1.1324 0.1424 -1.3199]","[1.2259 0.1414 -1.23]","[1.2386 0.133 -1.1436]","[1.2153 0.1203 -1.0497]","[1.1969 0.1086 -0.9857]","[1.1408 0.2374 -0.9597]","[1.1581 0.2555 -0.9849]","[1.1734 0.2844 -1.0295]","[1.1597 0.3106 -1.0754]","[1.155 0.3757 -0.6159]","[0 0.9999 0.0137]","[1.1042 0.2703 -0.9492]","[1.1157 0.294 -0.966]","[1.2656 0.1355 -0.3261]","[1.1651 0.2805 -0.2991]","[1.2649 0.1509 -0.2942]","[1.0349 0.3771 0.236]","[1.0144 0.5139 0.1333]","[1.1924 0.3317 -0.1219]","[0.7152 0.7709 1.637]","[0.8674 0.7128 1.447]","[0.9935 0.6532 1.2439]","[1.0948 0.3508 -1.1411]","[1.1258 0.2409 1.2223]","[1.0476 0.2702 1.5173]","[0.9622 0.3029 1.8245]","[0.868 0.6525 0.5823]","[0.7428 0.8507 0.4289]","[0.9102 0.277 0.6478]","[0.8149 0.7778 0.8085]","[1.0911 0.2213 0.4201]","[1.3662 0.2519 -0.0706]","[0.6447 0.9388 0.3393]","[0.8348 0.7889 0.3209]","[0.9261 0.6747 0.2656]","[0.9668 0.5052 0.2953]","[0.9811 0.383 0.3635]","[1.0033 0.2894 0.434]","[1.1764 0.0943 0.6138]","[0.6864 0.9084 0.0382]","[0.7675 0.8501 0.8299]","[1.471 0.052 -0.2368]","[1.1083 0.28 0.1769]","[0.0384 1.0335 0.6192]","[1.0114 0.2191 0.5118]","[1.0968 0.3378 -0.1346]","[0.7892 0.7315 0.7178]","[1.3242 0.2561 0.023]","[0.0615 0.9678 -0.3159]","[0.8801 0.2803 0.7025]","[1.4132 0.1745 0.109]","[0.6907 0.7121 -1.058]","[0.5303 0.7137 -1.1955]","[0.3449 0.9988 0.0264]","[0.5654 0.8034 -0.8471]","[0.4387 0.9757 0.8848]","[0.9802 0.3822 -1.5658]","[1.3464 0.0481 -0.2676]","[1.0799 0.3587 0.0661]","[0.5921 0.9355 0.6106]","[0.8935 0.577 0.6453]","[0.916 0.4949 0.6361]","[1.1043 0.3495 -1.0089]","[0.6701 0.874 -0.2389]","[0.9581 0.2173 -1.7802]","[0.7791 0.4952 -1.5467]","[0.6715 0.6013 -1.3994]","[0.9193 0.4171 0.6469]","[0.9048 0.3459 0.6733]","[0.8839 0.302 0.6884]","[0.668 0.9102 0.8583]","[0.9127 0.3556 0.792]","[0.9304 0.4347 0.8247]","[0.9266 0.5184 0.829]","[0.9057 0.6013 0.8065]","[0.8765 0.6524 0.7717]","[0.1732 1.0256 0.939]","[0.8633 0.6314 0.6649]","[1.1944 0.3128 -0.5193]","[1.2787 0.2449 -0.1849]","[1.2704 0.1438 -0.4606]","[0.7875 0.6157 -1.2566]","[0.8797 0.5062 -1.4098]","[1.0691 0.2181 -1.6876]","[0.349 0.8044 -0.9705]","[0.8933 0.3036 0.739]","[1.2218 0.1585 0.3797]","[0.8865 0.3712 -1.6798]","[0.374 0.9582 -0.2796]","[1.1717 0.1806 -0.9716]","[1.1898 0.1991 -1.0186]","[1.2085 0.2219 -1.0875]","[1.1985 0.2409 -1.1641]","[1.1283 0.2611 -1.2398]","[1.1232 0.282 -0.9163]","[1.1246 0.315 -0.9056]","[1.1221 0.3444 -0.8806]","[1.0939 0.432 -0.7548]","[0.8651 0.7465 -0.3292]","[1.1271 0.1564 0.5261]","[0.9461 0.2056 0.7977]","[0.9091 0.2628 0.7801]","[1.1119 0.2578 -0.8947]","[0.7362 0.7573 -0.6658]","[1.0657 0.1247 0.8075]","[1.0728 0.3075 -1.3242]","[1.2807 0.091 0.4576]","[1.2334 0.2256 0.1492]","[1.1106 0.1674 -1.4213]","[0.9936 0.5113 -1.0582]","[1.0849 0.4065 -0.2539]","[1.0318 0.4245 -1.2058]","[1.0401 0.5733 -0.2231]","[1.0811 0.467 -0.4042]","[0.9761 0.6327 -0.4554]","[1.1099 0.1998 -1.5578]","[1.1702 0.2829 0.0639]","[0.8988 0.5884 -1.1272]","[0.9534 0.4782 -1.2884]","[0.9753 0.5663 -0.8783]","[0.6468 0.8428 -0.4778]","[0.8746 0.665 -0.8547]","[0.4284 0.9008 -0.5691]","[1.0479 0.5174 -0.613]","[1.1604 0.2179 0.2813]","[1.39 0.22 -0.132]","[1.2904 0.2825 -0.1762]","[1.4568 0.1798 -0.0377]","[0.9692 0.2827 0.9227]","[0.9879 0.4353 0.9946]","[0.985 0.5667 1.0017]","[0.9488 0.6741 0.9747]","[0.8921 0.745 0.9132]","[0.7552 0.7874 0.6751]","[0.3471 1.0193 0.3214]","[0.8402 0.7135 0.4715]","[0.9016 0.622 0.4307]","[0.9394 0.5022 0.4377]","[0.95 0.3892 0.4772]","[0.9527 0.3017 0.5263]","[0.9541 0.2405 0.5734]","[-0.0138 1.0161 0.3175]","[1.2446 0.2805 -0.2205]","[1.3033 0.1587 0.2483]","[1.4665 0.1529 -0.1405]","[1.4327 0.1017 -0.2105]","[1.4212 0.1526 -0.1618]","[1.2153 0.2524 -0.2697]","[1.4581 0.0835 -0.2255]","[1.3471 0.0796 -0.2575]","[0.8968 0.2459 0.6919]","[0.9586 0.1909 0.6517]","[1.0299 0.1633 0.6261]","[0.8463 0.6814 0.7453]","[0.8424 0.7283 0.7989]"]
GPS_ExpressionFace = util.JSONToTable([[{
    "idle":["[1.3394 0.0116 -0.6829]","[1.5461 0.0001 -0.1319]","[1.3087 0.0061 -0.2945]","[1.3872 -0.0836 0.3496]","[1.5687 -0.001 0.0179]","[1.5192 -0.0015 0.2146]","[1.2366 0.0009 0.685]","[0.8458 -0.651 0.7115]","[1.1612 0.0019 1.001]","[1.1727 0.0034 1.1863]","[1.0267 0.0061 1.8896]","[1.3281 0.0121 -0.7625]","[1.2961 0.0128 -0.8187]","[1.2517 0.0131 -0.8393]","[1.2393 0.012 -0.8635]","[1.2587 0.0129 -0.9274]","[1.2836 0.0135 -1.004]","[1.2765 0.0143 -1.0828]","[1.1923 0.0122 -1.189]","[1.501 0.0016 -0.2057]","[1.365 -0.095 -0.2053]","[0.3889 -0.9826 1.2067]","[0.9459 -0.3824 0.6041]","[0.9425 -0.4721 0.5881]","[0.9188 -0.5609 0.5845]","[0.8368 -0.6813 0.6555]","[0.9376 -0.3084 0.6405]","[0.9684 -0.5184 0.9146]","[0.9665 -0.4194 0.9137]","[0.9416 -0.6073 0.8907]","[0.9057 -0.666 0.8472]","[0.7979 -0.7519 0.5481]","[1.0679 -0.3475 -1.3782]","[0.816 -0.687 0.7441]","[0.3746 -1.0122 0.6014]","[0.7004 -0.8584 0.6358]","[1.0737 -0.4549 -0.0316]","[1.3237 -0.1074 -0.6605]","[1.2798 -0.0859 -0.8193]","[1.2658 -0.2269 -0.7157]","[1.1946 -0.2979 -0.7864]","[1.2397 -0.1737 -0.8325]","[1.1728 -0.2401 -0.8537]","[1.049 -0.4252 -0.9995]","[1.5365 -0.0829 -0.1296]","[1.5576 -0.0986 0.0124]","[0.8875 -0.8127 0.9742]","[1.0723 -0.2775 0.3546]","[1.2895 -0.3168 -0.107]","[1.2534 -0.3227 -0.028]","[0.9532 -0.7049 -0.0227]","[1.4886 -0.0916 0.1953]","[1.0451 -0.5981 1.118]","[0.9777 -0.726 1.0686]","[0.5663 -0.9014 1.4591]","[1.1266 -0.1902 1.0281]","[0.938 -0.3319 0.8796]","[1.0159 -0.4907 -0.8729]","[0.166 -0.9075 -0.7077]","[1.2559 -0.2465 -0.1892]","[1.2745 -0.1648 -0.2322]","[1.0332 -0.3859 -0.9008]","[1.06 -0.346 -0.8826]","[0.9264 -0.778 1.1582]","[1.2394 -0.3197 -0.1762]","[1.0952 -0.4221 1.1158]","[1.1104 -0.4416 1.2325]","[0.909 -0.5331 1.8018]","[0.7685 -0.8377 1.3179]","[1.015 -0.4777 1.5287]","[0.8025 -0.8672 1.0336]","[0.607 -0.9253 1.1161]","[1.3148 -0.098 -0.755]","[1.2589 -0.1959 -0.7896]","[1.1923 -0.2683 -0.824]","[1.2433 -0.2214 -0.2169]","[1.0486 -0.3642 -0.8964]","[1.1103 -0.3291 -0.9083]","[1.0635 -0.3374 -0.8664]","[1.3923 -0.1913 -0.1282]","[1.1545 -0.2212 -0.8422]","[1.2002 -0.1529 -0.8386]","[1.2375 -0.0731 -0.8374]","[1.1859 -0.1168 -1.1938]","[1.2683 -0.1101 -1.0783]","[1.2733 -0.1025 -0.9951]","[1.2463 -0.0938 -0.9178]","[1.2264 -0.085 -0.864]","[1.1507 -0.2433 -0.868]","[1.1674 -0.2576 -0.8879]","[1.1814 -0.2799 -0.9288]","[1.1669 -0.2999 -0.9767]","[1.1523 -0.3817 -0.5904]","[0 -0.9997 -0.0247]","[1.3723 0.0043 -0.2413]","[1.1018 -0.2881 -0.8721]","[1.1114 -0.3063 -0.8867]","[1.2827 -0.1273 -0.3003]","[1.177 -0.2814 -0.272]","[1.2812 -0.1458 -0.2667]","[1.0412 -0.3676 0.2639]","[1.0212 -0.5067 0.1548]","[1.2025 -0.3361 -0.0974]","[0.751 -0.7585 1.6627]","[0.897 -0.6946 1.4603]","[1.0204 -0.6324 1.2312]","[1.1028 -0.343 -1.0693]","[1.158 -0.2208 1.212]","[1.0829 -0.2513 1.5478]","[1.0017 -0.2863 1.8714]","[0.8779 -0.6371 0.6054]","[0.7502 -0.8466 0.4361]","[0.9227 -0.2614 0.676]","[0.8318 -0.7656 0.8105]","[1.104 -0.214 0.4511]","[1.383 -0.256 -0.0444]","[0.6499 -0.9396 0.3367]","[0.8402 -0.7825 0.3332]","[0.9289 -0.6644 0.2818]","[0.9723 -0.492 0.3195]","[0.9874 -0.3691 0.3918]","[1.0123 -0.2783 0.4658]","[1.2002 -0.0904 0.6454]","[0.6888 -0.915 0.0343]","[0.7888 -0.8426 0.8243]","[1.4945 -0.0494 -0.2022]","[1.1176 -0.2754 0.2054]","[0.0541 -1.0279 0.6028]","[1.0242 -0.2081 0.5426]","[1.1036 -0.3389 -0.1108]","[0.8007 -0.7127 0.7299]","[1.3391 -0.2606 0.0505]","[0.057 -0.9707 -0.3582]","[0.8949 -0.2659 0.7287]","[1.4319 -0.1782 0.1401]","[0.6877 -0.7232 -1.0554]","[0.5262 -0.7168 -1.1957]","[0.3459 -1.0001 -0.0005]","[0.5589 -0.8252 -0.8589]","[0.4629 -0.9704 0.8819]","[1.0152 -0.3692 -1.5046]","[1.365 -0.0375 -0.2381]","[1.0861 -0.3539 0.0905]","[0.6071 -0.9328 0.6059]","[0.9007 -0.5545 0.6756]","[0.9245 -0.4738 0.6703]","[1.0931 -0.3527 -0.9377]","[0.6644 -0.8882 -0.2501]","[0.9968 -0.1958 -1.6838]","[0.7979 -0.4757 -1.5037]","[0.6798 -0.5902 -1.3795]","[1.1038 0.0053 1.5461]","[1.0267 0.0061 -1.7026]","[0.9285 -0.3979 0.6827]","[0.9159 -0.3276 0.7061]","[0.8975 -0.2848 0.7182]","[0.6907 -0.9053 0.8485]","[0.9208 -0.3444 0.8213]","[0.9376 -0.4254 0.854]","[0.933 -0.5076 0.857]","[0.9128 -0.5897 0.8307]","[0.8843 -0.6386 0.7934]","[0.1982 -1.0196 0.9367]","[0.8718 -0.6105 0.6922]","[1.2969 0.0083 -0.4161]","[1.2022 -0.3104 -0.4937]","[1.2944 -0.2478 -0.1622]","[1.2897 -0.1292 -0.4376]","[1.1585 0.0008 0.8485]","[0.7926 -0.6136 -1.2397]","[0.8985 -0.4985 -1.3742]","[1.1154 -0.2029 -1.5992]","[0.3395 -0.8186 -0.9886]","[0.907 -0.2906 0.7666]","[1.2393 -0.1553 0.411]","[1.1424 0.0073 -1.6132]","[0.9184 -0.3482 -1.6102]","[0.37 -0.9663 -0.3085]","[1.1929 -0.1712 -0.8643]","[1.2128 -0.1863 -0.9031]","[1.2307 -0.2034 -0.9626]","[1.2228 -0.2167 -1.0362]","[1.1576 -0.2442 -1.1389]","[1.1143 -0.3011 -0.8688]","[1.1143 -0.3283 -0.8629]","[1.1137 -0.355 -0.8421]","[1.0862 -0.4465 -0.7263]","[0.8619 -0.7654 -0.3286]","[1.144 -0.151 0.5564]","[0.9604 -0.1919 0.8143]","[0.927 -0.2509 0.7964]","[1.1004 -0.2806 -0.8473]","[0.7309 -0.7799 -0.6712]","[1.0882 -0.1163 0.8228]","[1.1053 -0.2978 -1.2543]","[1.4199 -0.0006 0.3766]","[1.3042 -0.0902 0.4919]","[1.325 -0 0.5263]","[1.2469 -0.2251 0.1772]","[1.1936 0.0084 -1.4807]","[1.1888 0.0105 -1.3233]","[1.1676 -0.1507 -1.3234]","[0.9902 -0.5146 -1.0272]","[1.0901 -0.407 -0.2335]","[1.0446 -0.4176 -1.1596]","[1.0425 -0.5826 -0.2087]","[1.0803 -0.474 -0.3864]","[0.9722 -0.6533 -0.4474]","[1.1642 -0.1872 -1.4737]","[1.1795 -0.2834 0.0907]","[0.8993 -0.5889 -1.1061]","[0.9698 -0.4707 -1.252]","[0.9674 -0.5805 -0.8585]","[0.6383 -0.8629 -0.4913]","[0.8681 -0.6827 -0.8448]","[0.4214 -0.9179 -0.5941]","[1.043 -0.5365 -0.5943]","[1.1733 -0.2146 0.3105]","[1.4098 -0.2231 -0.1055]","[1.3044 -0.2878 -0.1524]","[1.4765 -0.1825 -0.008]","[0.9868 -0.2648 0.9193]","[1.0066 -0.4154 0.978]","[1.0032 -0.5471 0.9847]","[0.9664 -0.6552 0.9624]","[0.9115 -0.7284 0.9082]","[0.7674 -0.7753 0.6836]","[0.3544 -1.0206 0.3031]","[0.8473 -0.7002 0.4881]","[0.9088 -0.6071 0.4507]","[0.9462 -0.4867 0.4634]","[0.9551 -0.3734 0.506]","[0.9614 -0.287 0.5572]","[0.9638 -0.2268 0.6031]","[-0.0053 -1.0134 0.2893]","[1.259 -0.2853 -0.196]","[1.321 -0.1581 0.2784]","[1.4876 -0.154 -0.1099]","[1.4526 -0.099 -0.1782]","[1.4408 -0.1528 -0.1328]","[1.2298 -0.2553 -0.2432]","[1.4798 -0.0799 -0.1922]","[1.3655 -0.0715 -0.2279]","[0.9115 -0.2329 0.7153]","[0.9732 -0.1789 0.6789]","[1.0463 -0.1534 0.6542]","[0.8555 -0.6665 0.7661]","[0.8519 -0.7109 0.8025]","[1.388 0.0831 0.3535]","[0.8503 0.6623 0.7393]","[1.3652 0.1023 -0.197]","[0.391 0.9882 1.2487]","[0.9493 0.389 0.6212]","[0.9462 0.4796 0.61]","[0.9239 0.5696 0.6107]","[0.8408 0.6907 0.6851]","[0.9409 0.3139 0.6542]","[0.9738 0.5252 0.9293]","[0.9713 0.4263 0.9254]","[0.947 0.6144 0.9091]","[0.9113 0.6735 0.8696]","[0.8032 0.7593 0.584]","[1.0716 0.3611 -1.3562]","[0.8213 0.6978 0.7709]","[0.3756 1.0162 0.6477]","[0.7052 0.8642 0.6742]","[1.0789 0.4634 -0.0031]","[1.3234 0.1295 -0.6488]","[1.2806 0.1098 -0.8094]","[1.2657 0.2513 -0.6904]","[1.1955 0.3259 -0.7511]","[1.2409 0.1988 -0.8124]","[1.1739 0.2675 -0.8255]","[1.0533 0.45 -0.9591]","[1.5372 0.0828 -0.1239]","[1.5584 0.096 0.0181]","[0.8935 0.8178 1.0005]","[1.0753 0.283 0.3688]","[1.2906 0.3204 -0.0856]","[1.255 0.3258 -0.0061]","[0.9595 0.7116 0.02]","[1.49 0.0901 0.1997]","[1.0539 0.6049 1.1272]","[0.9871 0.7317 1.0877]","[0.569 0.9101 1.4958]","[1.1311 0.1957 1.0268]","[0.9417 0.3398 0.8886]","[1.0201 0.5148 -0.8263]","[0.165 0.9012 -0.6565]","[1.2585 0.2529 -0.1699]","[1.2761 0.1739 -0.2185]","[1.0351 0.4183 -0.8556]","[1.0611 0.3761 -0.8419]","[0.9349 0.7837 1.1788]","[1.2415 0.3257 -0.1526]","[1.1031 0.4299 1.1194]","[1.1164 0.45 1.2382]","[0.9114 0.5472 1.8235]","[0.7741 0.845 1.3479]","[1.0182 0.4899 1.5414]","[0.8077 0.872 1.0642]","[0.6092 0.9308 1.1525]","[1.3155 0.1218 -0.7437]","[1.2593 0.2214 -0.767]","[1.1928 0.2967 -0.7926]","[1.2448 0.2291 -0.1996]","[1.0506 0.3961 -0.8527]","[1.1117 0.3578 -0.8722]","[1.0643 0.3654 -0.8285]","[1.3925 0.1938 -0.1139]","[1.1551 0.2473 -0.8165]","[1.2016 0.1784 -0.8217]","[1.2385 0.0973 -0.8292]","[1.1884 0.1398 -1.1844]","[1.2703 0.1361 -1.0691]","[1.2745 0.1288 -0.9854]","[1.2465 0.1184 -0.9087]","[1.2265 0.1088 -0.8553]","[1.1515 0.2681 -0.8415]","[1.169 0.2828 -0.8608]","[1.1824 0.3064 -0.9008]","[1.1678 0.3269 -0.9485]","[1.1548 0.3993 -0.5577]","[0 0.9997 0.0247]","[1.102 0.3137 -0.84]","[1.112 0.3339 -0.8528]","[1.2839 0.1385 -0.2889]","[1.1791 0.2913 -0.2506]","[1.2832 0.1552 -0.2547]","[1.0457 0.3748 0.2844]","[1.0279 0.5145 0.184]","[1.2047 0.3413 -0.0738]","[0.7547 0.7703 1.6938]","[0.9025 0.7044 1.4817]","[1.0278 0.6397 1.2435]","[1.1058 0.3658 -1.0406]","[1.1617 0.2295 1.2116]","[1.0843 0.2641 1.5543]","[1.0022 0.3004 1.8832]","[0.8827 0.6463 0.6346]","[0.7549 0.8512 0.4786]","[0.9256 0.2687 0.6866]","[0.8368 0.772 0.8391]","[1.1065 0.2192 0.4616]","[1.3844 0.2571 -0.0281]","[0.6538 0.9415 0.3846]","[0.8447 0.787 0.3747]","[0.9354 0.671 0.3192]","[0.9783 0.4997 0.3464]","[0.9913 0.3761 0.4114]","[1.0158 0.2841 0.4793]","[1.2019 0.0935 0.6491]","[0.6921 0.9158 0.0848]","[0.7926 0.8487 0.8569]","[1.4941 0.0527 -0.1978]","[1.1192 0.2811 0.2201]","[0.0552 1.0335 0.6491]","[1.0269 0.2139 0.5518]","[1.1051 0.3461 -0.0873]","[0.8061 0.7222 0.7582]","[1.3405 0.2613 0.0661]","[0.0556 0.9668 -0.3072]","[0.8969 0.2745 0.738]","[1.4332 0.1774 0.1503]","[0.6913 0.7245 -1.0087]","[0.5268 0.7139 -1.1514]","[0.3465 0.9991 0.0528]","[0.5612 0.823 -0.8086]","[0.4642 0.9762 0.9241]","[1.0171 0.3797 -1.482]","[1.3659 0.0461 -0.2337]","[1.0891 0.3614 0.1121]","[0.6095 0.9376 0.6475]","[0.9049 0.565 0.7002]","[0.9282 0.4824 0.6911]","[1.096 0.3823 -0.8988]","[0.6682 0.8893 -0.1981]","[0.9986 0.2066 -1.6721]","[0.8002 0.481 -1.4746]","[0.6811 0.5914 -1.3427]","[0.9324 0.4054 0.6995]","[0.919 0.3351 0.7207]","[0.9001 0.2931 0.7294]","[0.6942 0.911 0.886]","[0.9254 0.3532 0.832]","[0.9435 0.4328 0.867]","[0.9393 0.5159 0.8724]","[0.9192 0.598 0.8511]","[0.8906 0.6486 0.8173]","[0.2002 1.0262 0.9813]","[0.8756 0.6218 0.7185]","[1.2037 0.3256 -0.4674]","[1.2965 0.2522 -0.1435]","[1.2904 0.1447 -0.425]","[0.796 0.619 -1.1997]","[0.9009 0.5058 -1.3422]","[1.1185 0.215 -1.5876]","[0.3399 0.8121 -0.9401]","[0.9098 0.299 0.7767]","[1.2409 0.1582 0.4181]","[0.9203 0.3571 -1.5891]","[0.3703 0.9628 -0.2541]","[1.1934 0.1951 -0.8466]","[1.2132 0.211 -0.8854]","[1.2326 0.2285 -0.944]","[1.2245 0.2431 -1.0177]","[1.1603 0.2661 -1.1204]","[1.1157 0.3307 -0.8334]","[1.1165 0.3586 -0.8241]","[1.1153 0.3854 -0.8007]","[1.0888 0.468 -0.6853]","[0.8687 0.7704 -0.2817]","[1.1465 0.1546 0.5632]","[0.9632 0.1987 0.8179]","[0.9283 0.258 0.8035]","[1.1024 0.3084 -0.8146]","[0.7359 0.7835 -0.6227]","[1.0897 0.1206 0.8242]","[1.1099 0.3142 -1.2331]","[1.3053 0.0908 0.4959]","[1.249 0.2273 0.1899]","[1.1698 0.1694 -1.3126]","[0.9956 0.5309 -0.9876]","[1.0941 0.4174 -0.2049]","[1.049 0.4347 -1.1284]","[1.0503 0.5916 -0.1723]","[1.0852 0.4856 -0.3532]","[0.9804 0.6632 -0.4051]","[1.1673 0.2017 -1.4625]","[1.1817 0.2864 0.1077]","[0.9036 0.5995 -1.0649]","[0.9734 0.4839 -1.2201]","[0.9736 0.5962 -0.8127]","[0.6423 0.863 -0.4401]","[0.8746 0.6901 -0.7981]","[0.4223 0.9138 -0.5412]","[1.05 0.5507 -0.5543]","[1.175 0.2181 0.3218]","[1.411 0.2249 -0.0895]","[1.3063 0.2918 -0.1326]","[1.4786 0.1825 0.0029]","[0.9889 0.2719 0.9228]","[1.0112 0.423 0.9864]","[1.0098 0.5539 0.998]","[0.9737 0.6622 0.9809]","[0.9173 0.7363 0.9321]","[0.7729 0.7837 0.7161]","[0.3554 1.0209 0.3528]","[0.8523 0.7082 0.5233]","[0.9139 0.6143 0.482]","[0.9512 0.4938 0.488]","[0.9586 0.3801 0.525]","[0.9649 0.2937 0.5705]","[0.9666 0.2335 0.6129]","[-0.0042 1.0165 0.3371]","[1.2608 0.2915 -0.175]","[1.3218 0.1588 0.2863]","[1.4882 0.1553 -0.0998]","[1.4534 0.103 -0.1699]","[1.4421 0.1554 -0.1209]","[1.2317 0.2631 -0.2236]","[1.48 0.0843 -0.1855]","[1.3663 0.0788 -0.2216]","[0.9137 0.2406 0.723]","[0.9746 0.1857 0.6848]","[1.0489 0.1594 0.6597]","[0.8611 0.6769 0.7914]","[0.8584 0.7182 0.8288]"]
    ,"supersoy":["[1.222 0.0306 -0.6436]","[1.4384 0.0412 -0.1218]","[1.2142 0.037 -0.2799]","[1.2685 -0.0419 0.3617]","[1.4557 0.0423 0.0306]","[1.4004 0.0414 0.2264]","[1.1041 0.0386 0.7002]","[0.7445 -0.6199 0.7205]","[1.0003 0.0385 1.0963]","[0.9968 0.0391 1.2943]","[0.8499 0.0319 1.8808]","[1.2163 0.029 -0.715]","[1.1953 0.0282 -0.7668]","[1.1614 0.0283 -0.7862]","[1.0449 0.0291 -1.3643]","[1.064 0.0286 -1.4461]","[1.0826 0.0279 -1.5302]","[1.0512 0.0283 -1.6111]","[0.9648 0.0304 -1.6521]","[1.3975 0.0387 -0.1997]","[1.2686 -0.0689 -0.1955]","[0.2846 -0.968 1.1925]","[0.8482 -0.3472 0.6034]","[0.8441 -0.4391 0.5864]","[0.8198 -0.5305 0.5868]","[0.738 -0.6555 0.6713]","[0.8355 -0.2721 0.6444]","[0.8384 -0.4964 1.0217]","[0.8368 -0.3853 1.0148]","[0.8123 -0.5959 0.9849]","[0.7821 -0.6581 0.9173]","[0.7055 -0.7254 0.5556]","[0.8529 -0.331 -1.6182]","[0.7119 -0.6596 0.7625]","[0.3025 -1.011 0.5975]","[0.6062 -0.832 0.6496]","[0.988 -0.4452 -0.0106]","[1.2032 -0.1199 -0.6232]","[1.1766 -0.0947 -0.7704]","[1.1427 -0.2621 -0.6764]","[1.0482 -0.3357 -0.7497]","[1.1254 -0.1956 -0.7908]","[1.0403 -0.2633 -0.8249]","[0.8543 -0.4543 -1.0996]","[1.4285 -0.0426 -0.1186]","[1.4444 -0.0552 0.026]","[0.7513 -0.7786 1.0322]","[0.9718 -0.2506 0.3667]","[1.1964 -0.2938 -0.0757]","[1.161 -0.3009 0.0007]","[0.8813 -0.6984 0.0033]","[1.3733 -0.0495 0.2077]","[0.8858 -0.5742 1.221]","[0.8244 -0.695 1.1527]","[0.4323 -0.8746 1.4473]","[0.9708 -0.1693 1.1325]","[0.8154 -0.29 0.9564]","[0.8433 -0.5058 -0.8858]","[0.1812 -0.8881 -0.7562]","[1.1649 -0.2241 -0.157]","[1.1811 -0.1457 -0.2116]","[0.8611 -0.4363 -0.947]","[0.8869 -0.3806 -0.952]","[0.7737 -0.7445 1.2284]","[1.1498 -0.3009 -0.1418]","[0.9337 -0.4058 1.2321]","[0.9442 -0.4245 1.3373]","[0.7413 -0.5038 1.7939]","[0.6208 -0.8103 1.335]","[0.8486 -0.4549 1.5601]","[0.6689 -0.8333 1.0833]","[0.4828 -0.9011 1.1254]","[1.1996 -0.1097 -0.7095]","[1.1361 -0.2279 -0.7471]","[1.051 -0.3019 -0.7884]","[1.15 -0.2032 -0.1879]","[0.8763 -0.4104 -0.9541]","[0.9094 -0.3752 -1.1145]","[0.8876 -0.3603 -0.9404]","[1.2933 -0.1626 -0.1097]","[1.0286 -0.239 -0.813]","[1.0949 -0.1703 -0.7924]","[1.143 -0.0804 -0.7857]","[0.9575 -0.1383 -1.6214]","[1.0395 -0.1425 -1.5752]","[1.0593 -0.1306 -1.5012]","[1.0428 -0.1117 -1.4132]","[1.0277 -0.0951 -1.3442]","[0.9473 -0.2589 -1.1965]","[0.9552 -0.2854 -1.2206]","[0.9639 -0.3251 -1.2557]","[0.9485 -0.3559 -1.2845]","[1.0179 -0.3937 -0.578]","[0 -0.9996 -0.0294]","[1.279 0.0388 -0.2351]","[0.9084 -0.3033 -1.105]","[0.9126 -0.3414 -1.1114]","[1.1867 -0.1101 -0.2826]","[1.0878 -0.273 -0.2382]","[1.1871 -0.1281 -0.2478]","[0.95 -0.3476 0.2826]","[0.9361 -0.4929 0.181]","[1.1139 -0.3195 -0.0671]","[0.595 -0.7305 1.6541]","[0.7387 -0.6713 1.4855]","[0.8607 -0.6099 1.3194]","[0.8901 -0.3828 -1.2878]","[0.9872 -0.1996 1.3143]","[0.9104 -0.226 1.5727]","[0.8288 -0.2588 1.8608]","[0.7778 -0.6084 0.6137]","[0.6661 -0.8266 0.4463]","[0.8186 -0.222 0.6865]","[0.715 -0.739 0.842]","[0.997 -0.1816 0.4594]","[1.2825 -0.2263 -0.0206]","[0.5778 -0.9294 0.3431]","[0.7564 -0.761 0.3549]","[0.842 -0.644 0.3107]","[0.8794 -0.4684 0.3398]","[0.8906 -0.3416 0.4044]","[0.9084 -0.2468 0.4745]","[1.0727 -0.0499 0.6594]","[0.6297 -0.9154 0.0487]","[0.6709 -0.8111 0.8587]","[1.3921 -0.0151 -0.1956]","[1.027 -0.2546 0.2239]","[0.0148 -1.0338 0.5992]","[0.9164 -0.1748 0.5523]","[1.0203 -0.3282 -0.0783]","[0.6967 -0.6919 0.7568]","[1.2391 -0.2317 0.0746]","[0.0669 -0.9724 -0.3717]","[0.789 -0.2251 0.7384]","[1.3226 -0.1404 0.1557]","[0.5866 -0.6864 -1.1539]","[0.4766 -0.691 -1.3235]","[0.3123 -1.0146 -0.0044]","[0.5075 -0.7871 -0.9331]","[0.3663 -0.9593 0.8821]","[0.8213 -0.3508 -1.7638]","[1.2718 -0.0047 -0.2308]","[1.0009 -0.3409 0.1156]","[0.5198 -0.9144 0.6143]","[0.8018 -0.5205 0.6715]","[0.8243 -0.4391 0.6637]","[0.8983 -0.4052 -1.1111]","[0.6174 -0.892 -0.2451]","[0.8245 -0.1862 -2.0189]","[0.6613 -0.4726 -1.7255]","[0.578 -0.5784 -1.5497]","[0.9315 0.0352 1.5744]","[0.8499 0.0319 -2.0609]","[0.8268 -0.3617 0.677]","[0.8128 -0.2897 0.7049]","[0.7922 -0.2447 0.7229]","[0.578 -0.879 0.877]","[0.8084 -0.3084 0.8447]","[0.8196 -0.3928 0.8864]","[0.8154 -0.4768 0.891]","[0.7974 -0.5605 0.8617]","[0.773 -0.6101 0.8201]","[0.1268 -1.0203 0.9269]","[0.7721 -0.5773 0.6935]","[1.1937 0.0354 -0.3989]","[1.0875 -0.323 -0.4751]","[1.2001 -0.2231 -0.1331]","[1.1773 -0.1242 -0.4212]","[1.0192 0.0367 0.8955]","[0.6446 -0.5848 -1.3773]","[0.7233 -0.4747 -1.5629]","[0.9037 -0.1809 -1.9152]","[0.3389 -0.7857 -1.0813]","[0.7968 -0.2518 0.7784]","[1.125 -0.1184 0.4201]","[0.9237 0.0337 -1.9646]","[0.7573 -0.3483 -1.8935]","[0.3485 -0.9794 -0.3285]","[0.992 -0.1878 -1.2846]","[1 -0.2143 -1.3316]","[1.009 -0.2466 -1.3958]","[0.995 -0.2705 -1.4591]","[0.9337 -0.2886 -1.4791]","[0.9593 -0.3295 -0.8696]","[0.9526 -0.3663 -0.8523]","[0.9512 -0.396 -0.8237]","[0.9284 -0.4552 -0.7162]","[0.7928 -0.7574 -0.3211]","[1.0271 -0.1132 0.5667]","[0.8426 -0.1557 0.8516]","[0.81 -0.2107 0.8343]","[0.9512 -0.3 -0.8472]","[0.6558 -0.7558 -0.7048]","[0.9596 -0.0818 0.8671]","[0.8837 -0.3056 -1.5116]","[1.2982 0.0409 0.388]","[1.1773 -0.0487 0.5017]","[1.1963 0.0395 0.5358]","[1.1462 -0.1958 0.1949]","[0.9447 0.0339 -1.8294]","[0.9404 0.0333 -1.7115]","[0.9208 -0.1444 -1.6703]","[0.7979 -0.51 -1.1057]","[0.9943 -0.3957 -0.2081]","[0.8347 -0.4265 -1.3178]","[0.952 -0.5682 -0.2005]","[0.9687 -0.4576 -0.3757]","[0.8728 -0.6264 -0.4445]","[0.9245 -0.1639 -1.7808]","[1.0878 -0.2626 0.1145]","[0.7286 -0.567 -1.2106]","[0.7752 -0.4552 -1.415]","[0.8077 -0.5644 -0.8778]","[0.59 -0.8546 -0.5059]","[0.7394 -0.6595 -0.8959]","[0.3989 -0.9038 -0.6385]","[0.9087 -0.514 -0.5775]","[1.071 -0.1845 0.3223]","[1.3084 -0.1932 -0.0849]","[1.2105 -0.2637 -0.1217]","[1.3668 -0.1447 0.0082]","[0.8533 -0.2313 0.9999]","[0.8617 -0.3891 1.0871]","[0.857 -0.5264 1.0913]","[0.8252 -0.6358 1.0492]","[0.7774 -0.7053 0.966]","[0.665 -0.7482 0.6991]","[0.3045 -1.0237 0.3011]","[0.7561 -0.6736 0.5024]","[0.8118 -0.5796 0.4634]","[0.848 -0.4566 0.472]","[0.8593 -0.3414 0.5114]","[0.86 -0.2534 0.5646]","[0.8612 -0.1922 0.6125]","[-0.0225 -1.0155 0.2864]","[1.1676 -0.2649 -0.1628]","[1.2123 -0.1201 0.2911]","[1.3817 -0.1182 -0.0983]","[1.3506 -0.0704 -0.172]","[1.3386 -0.1216 -0.1211]","[1.139 -0.2417 -0.2119]","[1.3776 -0.0485 -0.1873]","[1.2702 -0.0426 -0.2209]","[0.8059 -0.1907 0.7342]","[0.8647 -0.1431 0.6947]","[0.9311 -0.1179 0.67]","[0.747 -0.6379 0.7887]","[0.7376 -0.6938 0.8448]","[1.2692 0.1212 0.3667]","[0.7537 0.6748 0.7462]","[1.2721 0.1406 -0.1897]","[0.2862 0.9825 1.2441]","[0.8535 0.4023 0.6122]","[0.8498 0.4951 0.6013]","[0.8276 0.5857 0.6095]","[0.7445 0.7049 0.7012]","[0.8385 0.3259 0.6483]","[0.8456 0.5518 1.0537]","[0.843 0.4424 1.0369]","[0.8219 0.65 1.0226]","[0.793 0.7113 0.9566]","[0.7125 0.7708 0.5947]","[0.8597 0.3955 -1.587]","[0.7206 0.7117 0.7912]","[0.3074 1.0237 0.6553]","[0.6112 0.8698 0.7004]","[0.9983 0.5 0.0166]","[1.2085 0.1789 -0.6143]","[1.1809 0.1499 -0.7632]","[1.1507 0.3161 -0.66]","[1.0588 0.3864 -0.7271]","[1.1325 0.248 -0.7782]","[1.0487 0.313 -0.8078]","[0.868 0.5052 -1.0675]","[1.4301 0.1228 -0.1146]","[1.445 0.1365 0.032]","[0.7552 0.8311 1.0992]","[0.9767 0.3109 0.3786]","[1.2043 0.3554 -0.0607]","[1.1699 0.3617 0.0175]","[0.8872 0.7413 0.0461]","[1.3753 0.1301 0.213]","[0.8878 0.6438 1.2743]","[0.8271 0.7562 1.2156]","[0.436 0.9071 1.4966]","[0.9708 0.2434 1.1483]","[0.8217 0.3495 0.9708]","[0.8567 0.5559 -0.8521]","[0.1776 0.9015 -0.6969]","[1.1775 0.2883 -0.1469]","[1.1892 0.2126 -0.2037]","[0.8731 0.4833 -0.9201]","[0.8986 0.4264 -0.928]","[0.7772 0.8038 1.2999]","[1.1601 0.3611 -0.1278]","[0.9394 0.4788 1.2705]","[0.9492 0.4965 1.3806]","[0.746 0.5592 1.8266]","[0.6277 0.8564 1.3955]","[0.8523 0.5209 1.5972]","[0.6728 0.8797 1.1541]","[0.487 0.932 1.1872]","[1.2045 0.1678 -0.7023]","[1.1448 0.281 -0.7322]","[1.061 0.3527 -0.7697]","[1.1585 0.2669 -0.1785]","[0.8885 0.4561 -0.9286]","[0.9223 0.423 -1.0879]","[0.898 0.4053 -0.9183]","[1.2975 0.2309 -0.1031]","[1.0365 0.287 -0.7978]","[1.1018 0.2227 -0.781]","[1.1459 0.135 -0.7792]","[0.9628 0.1987 -1.6074]","[1.0465 0.1994 -1.5615]","[1.0655 0.1867 -1.4895]","[1.0471 0.1705 -1.402]","[1.0312 0.1541 -1.3349]","[0.9566 0.3114 -1.1747]","[0.9663 0.3372 -1.1968]","[0.9741 0.3756 -1.2288]","[0.9584 0.4064 -1.2564]","[1.0296 0.4485 -0.5518]","[0 0.9996 0.0294]","[0.918 0.3525 -1.0824]","[0.9234 0.3899 -1.087]","[1.191 0.1802 -0.2749]","[1.0973 0.3334 -0.2255]","[1.1939 0.196 -0.2409]","[0.9561 0.4049 0.3004]","[0.9442 0.5456 0.2084]","[1.1247 0.3787 -0.0502]","[0.5999 0.7773 1.6996]","[0.7451 0.7309 1.5396]","[0.8644 0.6777 1.3795]","[0.901 0.4378 -1.2592]","[0.9866 0.2756 1.3357]","[0.9136 0.2945 1.5901]","[0.8308 0.3188 1.8795]","[0.7886 0.661 0.6414]","[0.6731 0.863 0.494]","[0.8226 0.2784 0.6878]","[0.7206 0.7881 0.8901]","[0.9998 0.246 0.4695]","[1.2886 0.2929 -0.0084]","[0.5848 0.9543 0.3985]","[0.7641 0.8029 0.3971]","[0.8488 0.6923 0.3461]","[0.8847 0.5229 0.3637]","[0.8945 0.3994 0.4201]","[0.9136 0.3061 0.4854]","[1.0748 0.1248 0.6637]","[0.6344 0.9407 0.104]","[0.6785 0.8559 0.9163]","[1.3929 0.0909 -0.1929]","[1.0332 0.3162 0.2382]","[0.0144 1.0339 0.6519]","[0.9192 0.2369 0.5595]","[1.028 0.3864 -0.0615]","[0.7036 0.7429 0.7908]","[1.2459 0.2965 0.0877]","[0.0682 0.9773 -0.3125]","[0.7931 0.2813 0.7406]","[1.327 0.2147 0.1657]","[0.5927 0.7358 -1.104]","[0.4803 0.7312 -1.2701]","[0.319 1.0263 0.0595]","[0.5116 0.824 -0.8773]","[0.3701 0.9797 0.9391]","[0.8254 0.4146 -1.7303]","[1.274 0.0827 -0.2281]","[1.0105 0.3993 0.1351]","[0.525 0.9427 0.6709]","[0.8076 0.579 0.689]","[0.8297 0.4968 0.6757]","[0.9122 0.4538 -1.0831]","[0.625 0.9202 -0.1878]","[0.8275 0.2519 -1.9993]","[0.6664 0.5316 -1.683]","[0.5821 0.6301 -1.5011]","[0.8323 0.4169 0.6834]","[0.817 0.344 0.7086]","[0.7969 0.3004 0.7249]","[0.5834 0.9152 0.9404]","[0.8162 0.3635 0.8549]","[0.829 0.4463 0.9034]","[0.826 0.5305 0.9143]","[0.8078 0.6132 0.89]","[0.7826 0.6631 0.8484]","[0.1271 1.0266 0.9789]","[0.7793 0.6349 0.7156]","[1.0993 0.381 -0.4548]","[1.2079 0.2876 -0.1236]","[1.1813 0.1904 -0.4111]","[0.6534 0.643 -1.3313]","[0.7312 0.5346 -1.5204]","[0.9069 0.2481 -1.8958]","[0.3388 0.812 -1.0244]","[0.802 0.3076 0.7834]","[1.1279 0.1905 0.4292]","[0.7611 0.4116 -1.8604]","[0.3543 0.9946 -0.2646]","[0.9984 0.2435 -1.2678]","[1.0072 0.2699 -1.3136]","[1.0169 0.3008 -1.3746]","[1.0031 0.325 -1.4359]","[0.9425 0.346 -1.4546]","[0.9713 0.3766 -0.8493]","[0.9664 0.4132 -0.8298]","[0.9635 0.4428 -0.8001]","[0.9395 0.5065 -0.6847]","[0.8019 0.7943 -0.2716]","[1.0305 0.1829 0.574]","[0.8484 0.221 0.8581]","[0.8115 0.2696 0.8415]","[0.963 0.3462 -0.8289]","[0.6642 0.7986 -0.6536]","[0.9612 0.1528 0.874]","[0.8916 0.3674 -1.4837]","[1.1792 0.1259 0.5059]","[1.1519 0.2624 0.2086]","[0.9251 0.2109 -1.6546]","[0.8103 0.566 -1.0686]","[1.0066 0.4522 -0.1852]","[0.8458 0.4852 -1.2846]","[0.9641 0.6166 -0.1629]","[0.9809 0.5117 -0.3456]","[0.8826 0.6724 -0.4024]","[0.9264 0.2322 -1.7631]","[1.0957 0.3232 0.1296]","[0.7412 0.6257 -1.166]","[0.7834 0.5176 -1.3774]","[0.8202 0.6179 -0.837]","[0.599 0.8869 -0.4496]","[0.7514 0.709 -0.8498]","[0.4038 0.9271 -0.5792]","[0.9234 0.5636 -0.5426]","[1.076 0.2508 0.3349]","[1.3142 0.2612 -0.0756]","[1.219 0.3263 -0.1088]","[1.3747 0.2203 0.0182]","[0.8614 0.2989 1.0153]","[0.8683 0.4546 1.1159]","[0.8614 0.5891 1.1303]","[0.8309 0.6947 1.0937]","[0.7831 0.7598 1.0159]","[0.6713 0.7945 0.7417]","[0.3074 1.033 0.3612]","[0.7629 0.7229 0.5367]","[0.8193 0.6312 0.4934]","[0.854 0.5113 0.4914]","[0.8634 0.3975 0.5247]","[0.8627 0.3107 0.572]","[0.8627 0.2509 0.6166]","[-0.0232 1.0148 0.3413]","[1.1769 0.3262 -0.1508]","[1.2157 0.1948 0.3012]","[1.3854 0.1926 -0.091]","[1.3543 0.1419 -0.1665]","[1.343 0.1924 -0.1139]","[1.1471 0.3027 -0.2007]","[1.3803 0.123 -0.1828]","[1.2733 0.1172 -0.2159]","[0.8079 0.2482 0.7353]","[0.8654 0.205 0.6977]","[0.933 0.1842 0.6763]","[0.7552 0.6914 0.8168]","[0.7487 0.7439 0.8855]"]
    ,"soy":["[1.2834 -0.0002 -0.6416]","[1.4697 -0.0052 -0.0671]","[1.2423 -0.0034 -0.2388]","[1.3033 -0.0836 0.3984]","[1.487 -0.0048 0.0823]","[1.4333 -0.0034 0.2719]","[1.1458 0.0005 0.7246]","[0.7784 -0.6397 0.7286]","[1.0598 0.0019 1.0594]","[1.0615 0.0027 1.2454]","[0.9037 0.003 1.9087]","[1.2785 -0.0007 -0.7209]","[1.2534 -0.0001 -0.7846]","[1.2139 0.0006 -0.8157]","[1.1445 0.0041 -1.1927]","[1.1644 0.0047 -1.2797]","[1.1811 0.0054 -1.375]","[1.1499 0.0058 -1.4657]","[1.0415 0.0066 -1.517]","[1.4294 -0.0046 -0.1426]","[1.2978 -0.0985 -0.1474]","[0.3209 -0.9799 1.2092]","[0.8755 -0.3732 0.6358]","[0.873 -0.4609 0.6151]","[0.8512 -0.55 0.608]","[0.772 -0.6749 0.6749]","[0.8661 -0.3017 0.6775]","[0.8828 -0.5184 0.982]","[0.8794 -0.4161 0.9829]","[0.8575 -0.6103 0.9514]","[0.8251 -0.6692 0.896]","[0.7413 -0.7451 0.5634]","[0.9287 -0.3579 -1.5384]","[0.7496 -0.6785 0.7583]","[0.3334 -1.0157 0.6071]","[0.6436 -0.8526 0.6506]","[1.0099 -0.4516 -0.0025]","[1.264 -0.1273 -0.6238]","[1.2374 -0.0991 -0.7921]","[1.2097 -0.2475 -0.6933]","[1.1341 -0.3097 -0.7851]","[1.1961 -0.1824 -0.82]","[1.1245 -0.2393 -0.863]","[0.9611 -0.4376 -1.1062]","[1.4608 -0.0853 -0.0649]","[1.477 -0.0994 0.0754]","[0.8044 -0.8021 1.0052]","[1.002 -0.2767 0.3887]","[1.2238 -0.3111 -0.0506]","[1.1879 -0.3188 0.0226]","[0.9083 -0.6944 -0.0032]","[1.4058 -0.0922 0.2514]","[0.9483 -0.5922 1.168]","[0.8864 -0.7168 1.1093]","[0.4781 -0.8956 1.4633]","[1.0302 -0.1901 1.0855]","[0.8545 -0.3256 0.9426]","[0.9421 -0.4865 -0.9248]","[0.1779 -0.8938 -0.7409]","[1.1924 -0.2394 -0.1314]","[1.2104 -0.1634 -0.1795]","[0.9696 -0.3921 -0.9849]","[0.9969 -0.3383 -0.9755]","[0.8337 -0.7665 1.1905]","[1.1767 -0.3115 -0.1239]","[0.9951 -0.4194 1.173]","[1.0055 -0.4386 1.2834]","[0.7942 -0.5308 1.8167]","[0.6756 -0.8288 1.3325]","[0.9032 -0.4753 1.5568]","[0.7208 -0.8551 1.0588]","[0.5293 -0.9171 1.1274]","[1.2632 -0.1152 -0.7198]","[1.2082 -0.2131 -0.7699]","[1.1372 -0.2765 -0.8256]","[1.18 -0.2153 -0.1628]","[0.9866 -0.3651 -0.9868]","[1.028 -0.3405 -1.0828]","[0.9972 -0.3226 -0.9559]","[1.3223 -0.1896 -0.0658]","[1.1096 -0.2143 -0.8538]","[1.1616 -0.1572 -0.8306]","[1.2002 -0.0843 -0.8185]","[1.0389 -0.1439 -1.5008]","[1.1436 -0.1457 -1.4415]","[1.1651 -0.1328 -1.3556]","[1.1486 -0.1147 -1.2556]","[1.1312 -0.0997 -1.1825]","[1.0598 -0.2406 -1.1028]","[1.0713 -0.2649 -1.1306]","[1.0786 -0.3023 -1.1743]","[1.0639 -0.3337 -1.2142]","[1.0899 -0.382 -0.587]","[0 -0.9996 -0.0295]","[1.3064 -0.0029 -0.1822]","[1.0229 -0.2769 -1.0524]","[1.0292 -0.3079 -1.0685]","[1.2159 -0.1313 -0.2496]","[1.1155 -0.277 -0.2259]","[1.2169 -0.1473 -0.2149]","[0.977 -0.3659 0.2983]","[0.9625 -0.5032 0.186]","[1.1397 -0.3314 -0.0507]","[0.6481 -0.7542 1.6725]","[0.7937 -0.6889 1.4811]","[0.9208 -0.626 1.2726]","[0.9947 -0.3703 -1.2424]","[1.0507 -0.2198 1.2652]","[0.9665 -0.2515 1.5783]","[0.8794 -0.2872 1.8888]","[0.8117 -0.6282 0.6266]","[0.6996 -0.8413 0.4524]","[0.8503 -0.256 0.7173]","[0.7584 -0.7604 0.8348]","[1.0299 -0.2133 0.4851]","[1.3123 -0.2527 0.0162]","[0.6091 -0.9363 0.3482]","[0.7878 -0.7766 0.355]","[0.8726 -0.6606 0.3094]","[0.9113 -0.488 0.3492]","[0.9217 -0.3653 0.4239]","[0.9419 -0.2757 0.4986]","[1.1135 -0.0895 0.6833]","[0.6566 -0.9085 0.0456]","[0.7158 -0.8344 0.8466]","[1.4234 -0.0545 -0.1401]","[1.0519 -0.2758 0.2442]","[0.0303 -1.0332 0.6027]","[0.9516 -0.2072 0.5765]","[1.0438 -0.3356 -0.0691]","[0.735 -0.7109 0.7528]","[1.2667 -0.2589 0.1063]","[0.063 -0.9703 -0.3676]","[0.8215 -0.2608 0.7665]","[1.3527 -0.178 0.1954]","[0.6318 -0.7044 -1.1264]","[0.4998 -0.7099 -1.2793]","[0.3301 -1.0058 0.0003]","[0.5314 -0.7969 -0.9087]","[0.4045 -0.9688 0.8893]","[0.8871 -0.3818 -1.6722]","[1.2997 -0.043 -0.1791]","[1.0237 -0.3528 0.1276]","[0.5562 -0.9296 0.6181]","[0.8324 -0.54 0.6975]","[0.8544 -0.4605 0.6965]","[1.0148 -0.3718 -1.0943]","[0.6387 -0.8761 -0.2463]","[0.878 -0.2136 -1.9018]","[0.7129 -0.496 -1.6463]","[0.6211 -0.601 -1.49]","[0.9869 0.0033 1.5794]","[0.9037 0.003 -1.9382]","[0.8573 -0.3876 0.713]","[0.8445 -0.3202 0.7413]","[0.8251 -0.2787 0.7558]","[0.6218 -0.8978 0.867]","[0.8472 -0.3377 0.8413]","[0.864 -0.4175 0.8635]","[0.8599 -0.4963 0.86]","[0.8408 -0.5758 0.8331]","[0.8147 -0.6257 0.7999]","[0.1535 -1.023 0.9381]","[0.8049 -0.5964 0.7108]","[1.2311 -0.002 -0.3707]","[1.1392 -0.3168 -0.4712]","[1.2286 -0.2414 -0.1023]","[1.2192 -0.1414 -0.3996]","[1.0647 0.0012 0.8943]","[0.7067 -0.6115 -1.3352]","[0.7881 -0.5051 -1.5001]","[0.9709 -0.2146 -1.8057]","[0.3436 -0.8005 -1.0505]","[0.8327 -0.2858 0.7972]","[1.1593 -0.1543 0.4506]","[0.9926 0.0011 -1.8443]","[0.8121 -0.3729 -1.7932]","[0.3593 -0.9689 -0.3188]","[1.0993 -0.1794 -1.1501]","[1.1123 -0.2039 -1.2016]","[1.1225 -0.2352 -1.2748]","[1.1079 -0.2597 -1.3483]","[1.0306 -0.281 -1.3863]","[1.0584 -0.2922 -0.9092]","[1.0553 -0.3283 -0.8967]","[1.0527 -0.3591 -0.8707]","[1.0188 -0.4366 -0.7441]","[0.8212 -0.7418 -0.3232]","[1.0643 -0.1503 0.5924]","[0.8808 -0.1895 0.8595]","[0.8479 -0.2462 0.8474]","[1.0453 -0.2656 -0.8843]","[0.6895 -0.7496 -0.6972]","[1.0005 -0.1165 0.8662]","[0.9661 -0.318 -1.4363]","[1.3334 -0.001 0.4265]","[1.2166 -0.0894 0.534]","[1.2363 -0.0001 0.5694]","[1.1755 -0.2254 0.2226]","[1.0262 0.0011 -1.7134]","[1.022 0.0034 -1.5916]","[1.0036 -0.1664 -1.5633]","[0.8943 -0.517 -1.1063]","[1.0257 -0.4006 -0.2033]","[0.9253 -0.4358 -1.2835]","[0.9794 -0.5654 -0.1965]","[1.0142 -0.4596 -0.3749]","[0.9117 -0.6202 -0.4483]","[1.0029 -0.1965 -1.6774]","[1.1129 -0.2827 0.1351]","[0.8075 -0.5865 -1.1897]","[0.8515 -0.4799 -1.3688]","[0.8904 -0.5649 -0.8996]","[0.6131 -0.8421 -0.5013]","[0.8018 -0.6615 -0.8921]","[0.4106 -0.9033 -0.6219]","[0.9753 -0.5105 -0.5978]","[1.1011 -0.2148 0.349]","[1.3384 -0.2202 -0.0425]","[1.2387 -0.2808 -0.0935]","[1.399 -0.1815 0.0549]","[0.8974 -0.2597 0.9801]","[0.9137 -0.413 1.0467]","[0.9113 -0.5467 1.0503]","[0.8774 -0.6551 1.0154]","[0.8267 -0.7254 0.9456]","[0.7056 -0.7701 0.7004]","[0.3277 -1.0235 0.3082]","[0.7891 -0.6939 0.5083]","[0.8469 -0.6012 0.4746]","[0.8812 -0.4803 0.4916]","[0.8875 -0.3679 0.5373]","[0.892 -0.2835 0.5926]","[0.892 -0.2251 0.6396]","[-0.0153 -1.0159 0.2869]","[1.1958 -0.2771 -0.1405]","[1.244 -0.1578 0.325]","[1.4128 -0.1543 -0.0458]","[1.3821 -0.1031 -0.1187]","[1.3689 -0.1529 -0.0708]","[1.1678 -0.2489 -0.1919]","[1.4086 -0.0848 -0.132]","[1.2993 -0.0762 -0.1707]","[0.837 -0.2267 0.7602]","[0.8981 -0.1779 0.7184]","[0.9686 -0.1539 0.6915]","[0.7869 -0.6557 0.7764]","[0.7776 -0.71 0.8345]","[1.3039 0.0811 0.4036]","[0.7832 0.658 0.7638]","[1.2992 0.0932 -0.1378]","[0.3243 0.9815 1.2563]","[0.8791 0.3866 0.6593]","[0.8769 0.4749 0.6432]","[0.8557 0.5657 0.6401]","[0.7752 0.691 0.714]","[0.8685 0.3154 0.6954]","[0.8866 0.5261 1.0143]","[0.8832 0.4243 1.0054]","[0.8619 0.6193 0.9891]","[0.8298 0.6802 0.9369]","[0.7459 0.7579 0.6071]","[0.933 0.3566 -1.5097]","[0.7535 0.6951 0.7965]","[0.3358 1.0188 0.6616]","[0.6484 0.861 0.7006]","[1.0158 0.4568 0.0286]","[1.265 0.1239 -0.6095]","[1.2379 0.0968 -0.7811]","[1.211 0.2428 -0.6652]","[1.1357 0.3053 -0.7468]","[1.1974 0.1796 -0.7979]","[1.1251 0.2353 -0.8336]","[0.965 0.431 -1.0622]","[1.4613 0.0753 -0.058]","[1.4769 0.0904 0.0815]","[0.8071 0.8108 1.0588]","[1.0056 0.2823 0.405]","[1.2277 0.3053 -0.0289]","[1.1918 0.3137 0.0446]","[0.9113 0.7011 0.0447]","[1.4064 0.0866 0.2568]","[0.9508 0.6012 1.2071]","[0.8886 0.7251 1.1578]","[0.483 0.8994 1.5067]","[1.0298 0.198 1.0964]","[0.8591 0.3378 0.9581]","[0.9455 0.4779 -0.8769]","[0.1769 0.8907 -0.6791]","[1.1984 0.2359 -0.1127]","[1.2143 0.1609 -0.167]","[0.9722 0.3832 -0.9393]","[0.9975 0.3309 -0.935]","[0.8366 0.7743 1.243]","[1.1824 0.3082 -0.1035]","[0.9984 0.4292 1.2003]","[1.008 0.4476 1.3135]","[0.798 0.5389 1.8441]","[0.6798 0.8357 1.3803]","[0.9059 0.485 1.5843]","[0.7236 0.8628 1.1156]","[0.5327 0.9229 1.1789]","[1.2644 0.1132 -0.7067]","[1.2094 0.2094 -0.7445]","[1.1381 0.2723 -0.7918]","[1.1834 0.2134 -0.1469]","[0.9882 0.3574 -0.9434]","[1.0288 0.3343 -1.043]","[0.9972 0.3158 -0.9187]","[1.324 0.1827 -0.0495]","[1.1094 0.2111 -0.8283]","[1.1629 0.1558 -0.8123]","[1.2002 0.083 -0.8086]","[1.0399 0.1533 -1.4866]","[1.1443 0.153 -1.427]","[1.1658 0.14 -1.3411]","[1.1473 0.1223 -1.2419]","[1.1299 0.1064 -1.1702]","[1.0596 0.239 -1.0727]","[1.0714 0.2632 -1.099]","[1.0786 0.3002 -1.1401]","[1.063 0.3305 -1.1791]","[1.0932 0.3777 -0.5517]","[0 0.9996 0.0295]","[1.0225 0.2729 -1.0195]","[1.0291 0.3035 -1.0322]","[1.2184 0.1279 -0.2394]","[1.1203 0.2763 -0.2076]","[1.22 0.1437 -0.204]","[0.9811 0.3729 0.3215]","[0.9679 0.5107 0.2188]","[1.145 0.3282 -0.0286]","[0.6526 0.7604 1.7107]","[0.7982 0.6977 1.5206]","[0.9225 0.635 1.3148]","[0.9964 0.3679 -1.2074]","[1.0502 0.2289 1.2802]","[0.968 0.2607 1.5918]","[0.882 0.2949 1.9037]","[0.8176 0.6441 0.663]","[0.7043 0.8492 0.5023]","[0.8528 0.2718 0.7305]","[0.7625 0.7719 0.8821]","[1.0326 0.2198 0.4984]","[1.3145 0.2462 0.0342]","[0.6124 0.9402 0.4055]","[0.7927 0.7849 0.4018]","[0.8783 0.6694 0.3504]","[0.9152 0.4976 0.3801]","[0.9248 0.375 0.4471]","[0.9451 0.2846 0.5151]","[1.1149 0.0933 0.6885]","[0.6585 0.9122 0.1044]","[0.7202 0.8433 0.8976]","[1.4235 0.0457 -0.135]","[1.0547 0.2792 0.2603]","[0.0312 1.0354 0.6533]","[0.9539 0.2161 0.5888]","[1.0467 0.3343 -0.0481]","[0.7388 0.7272 0.7946]","[1.2712 0.2525 0.1226]","[0.0637 0.9695 -0.3077]","[0.8245 0.2783 0.7802]","[1.3555 0.1722 0.2067]","[0.6366 0.7001 -1.0706]","[0.5046 0.706 -1.2242]","[0.3321 1.0075 0.0646]","[0.5339 0.7935 -0.8493]","[0.4067 0.9741 0.9406]","[0.89 0.3799 -1.6418]","[1.301 0.0377 -0.175]","[1.0282 0.3578 0.1505]","[0.5589 0.9354 0.6715]","[0.8359 0.5589 0.7272]","[0.8572 0.4767 0.723]","[1.0167 0.3653 -1.052]","[0.6423 0.8789 -0.1861]","[0.8799 0.2182 -1.8864]","[0.7181 0.4955 -1.6073]","[0.6253 0.5974 -1.4414]","[0.8616 0.4026 0.7354]","[0.8471 0.3361 0.7607]","[0.8276 0.2958 0.7716]","[0.6258 0.9053 0.9219]","[0.8521 0.3526 0.8577]","[0.8702 0.4291 0.8845]","[0.8659 0.5093 0.8878]","[0.8467 0.5899 0.8678]","[0.819 0.6414 0.8369]","[0.1551 1.0256 0.9867]","[0.8081 0.6162 0.7428]","[1.1434 0.3138 -0.4446]","[1.2326 0.2372 -0.0831]","[1.2206 0.1381 -0.3854]","[0.7132 0.6076 -1.2863]","[0.7938 0.4998 -1.4582]","[0.9735 0.216 -1.7893]","[0.3465 0.7968 -0.9909]","[0.8361 0.3023 0.8115]","[1.1617 0.1569 0.4596]","[0.816 0.3739 -1.7637]","[0.3619 0.9682 -0.2539]","[1.099 0.1822 -1.1277]","[1.1111 0.2065 -1.1784]","[1.122 0.2371 -1.2491]","[1.1068 0.2619 -1.3228]","[1.0308 0.283 -1.3603]","[1.0594 0.2864 -0.873]","[1.0583 0.3212 -0.8568]","[1.0544 0.3513 -0.8276]","[1.0222 0.4297 -0.7012]","[0.8251 0.7446 -0.2698]","[1.0675 0.1553 0.6016]","[0.8843 0.2021 0.8683]","[0.8495 0.2596 0.8593]","[1.0474 0.2605 -0.8523]","[0.6937 0.7487 -0.6409]","[1.0018 0.1224 0.8733]","[0.9684 0.3173 -1.4084]","[1.2183 0.0895 0.5389]","[1.179 0.2238 0.2374]","[1.005 0.1709 -1.5488]","[0.8982 0.5109 -1.0618]","[1.031 0.4017 -0.1759]","[0.9283 0.4313 -1.2458]","[0.9852 0.57 -0.1561]","[1.02 0.4599 -0.3404]","[0.9166 0.6221 -0.402]","[1.0057 0.1983 -1.6618]","[1.118 0.2813 0.1528]","[0.8126 0.5821 -1.1407]","[0.8557 0.4756 -1.3293]","[0.8958 0.559 -0.8495]","[0.6162 0.8425 -0.4413]","[0.8071 0.6563 -0.8387]","[0.4128 0.9017 -0.5584]","[0.982 0.5057 -0.5571]","[1.1036 0.2168 0.3628]","[1.341 0.2131 -0.0246]","[1.2434 0.2757 -0.0731]","[1.404 0.1741 0.0679]","[0.9019 0.2728 0.9935]","[0.916 0.4228 1.073]","[0.9127 0.5549 1.0853]","[0.8803 0.6637 1.0567]","[0.8293 0.7367 0.9916]","[0.7102 0.7832 0.7466]","[0.3291 1.0242 0.3669]","[0.7933 0.7076 0.5493]","[0.8513 0.6127 0.5115]","[0.8844 0.4911 0.5212]","[0.8903 0.3788 0.5612]","[0.8942 0.2954 0.6095]","[0.8941 0.2369 0.6521]","[-0.0149 1.0166 0.3415]","[1.2003 0.2734 -0.121]","[1.2453 0.1564 0.3355]","[1.4147 0.1458 -0.0339]","[1.3837 0.0951 -0.1084]","[1.3711 0.1451 -0.0572]","[1.1719 0.2474 -0.1751]","[1.4091 0.077 -0.1233]","[1.3002 0.0703 -0.1636]","[0.8395 0.2428 0.771]","[0.8997 0.19 0.7275]","[0.9706 0.1627 0.7002]","[0.7914 0.6723 0.8141]","[0.783 0.7231 0.8785]"]
    ,"grin":["[1.2757 0.0195 -0.4822]","[1.5154 0.016 -0.0026]","[1.2761 0.0169 -0.1606]","[1.3522 -0.0643 0.4577]","[1.5352 0.0159 0.1452]","[1.483 0.0152 0.3348]","[1.2015 0.0122 0.7748]","[0.8159 -0.6339 0.77]","[1.1221 0.009 1.0752]","[1.1317 0.0087 1.2565]","[0.997 0.0103 1.9417]","[1.2674 0.0203 -0.5509]","[1.2417 0.0201 -0.593]","[1.199 0.02 -0.6008]","[1.1792 0.021 -0.7855]","[1.201 0.0215 -0.8419]","[1.2269 0.0213 -0.9084]","[1.2185 0.021 -0.9876]","[1.144 0.0179 -1.1149]","[1.4721 0.0162 -0.0772]","[1.336 -0.0772 -0.0761]","[0.3773 -0.9689 1.2072]","[0.9147 -0.3621 0.6761]","[0.9105 -0.4527 0.663]","[0.8874 -0.5427 0.66]","[0.8058 -0.6696 0.718]","[0.9047 -0.2889 0.7078]","[0.9286 -0.5036 0.9765]","[0.9282 -0.4048 0.9752]","[0.9013 -0.5936 0.9495]","[0.8682 -0.6532 0.9022]","[0.7665 -0.7396 0.6176]","[1.0092 -0.3474 -1.2967]","[0.7855 -0.6721 0.7955]","[0.3564 -1.0055 0.6158]","[0.6734 -0.8445 0.6822]","[1.0406 -0.4616 0.1039]","[1.2615 -0.1218 -0.4585]","[1.2221 -0.1084 -0.5878]","[1.195 -0.2639 -0.4852]","[1.0999 -0.3533 -0.5272]","[1.1689 -0.2133 -0.5865]","[1.0814 -0.294 -0.5949]","[0.9294 -0.4652 -0.7762]","[1.5063 -0.0641 0.0004]","[1.5249 -0.076 0.143]","[0.8538 -0.796 1.0222]","[1.0362 -0.263 0.4534]","[1.2613 -0.2983 0.0418]","[1.224 -0.3026 0.1168]","[0.9164 -0.7313 0.1173]","[1.4547 -0.07 0.3162]","[1.0042 -0.5802 1.1775]","[0.9397 -0.7082 1.1246]","[0.5477 -0.8842 1.4675]","[1.0901 -0.178 1.0924]","[0.9018 -0.3176 0.9381]","[0.9029 -0.5408 -0.6133]","[0.157 -0.9099 -0.6925]","[1.2294 -0.2307 -0.0401]","[1.2436 -0.1493 -0.0894]","[0.9036 -0.4678 -0.622]","[0.9289 -0.4225 -0.6215]","[0.8912 -0.7609 1.2083]","[1.2101 -0.3061 -0.0153]","[1.0555 -0.4058 1.1769]","[1.0717 -0.425 1.2935]","[0.8805 -0.5193 1.8386]","[0.7373 -0.8195 1.3463]","[0.9789 -0.4626 1.5797]","[0.7735 -0.8505 1.0744]","[0.5844 -0.9086 1.1348]","[1.2529 -0.1169 -0.5385]","[1.1851 -0.235 -0.5497]","[1.0964 -0.3231 -0.5628]","[1.214 -0.2089 -0.0665]","[0.9184 -0.4463 -0.6217]","[0.9791 -0.3926 -0.7006]","[0.9318 -0.4073 -0.6189]","[1.366 -0.1716 0.0041]","[1.0639 -0.277 -0.5815]","[1.1301 -0.1946 -0.5866]","[1.1812 -0.097 -0.5948]","[1.13 -0.1325 -1.1076]","[1.2025 -0.1248 -0.9727]","[1.2069 -0.1177 -0.8926]","[1.1796 -0.1093 -0.826]","[1.1605 -0.0997 -0.7778]","[1.0471 -0.2872 -0.7202]","[1.0605 -0.3038 -0.7351]","[1.0704 -0.3268 -0.7686]","[1.0533 -0.3449 -0.8132]","[1.0658 -0.4195 -0.3837]","[0 -0.9995 -0.0308]","[1.3445 0.0167 -0.1179]","[0.9781 -0.3422 -0.6887]","[0.9838 -0.3677 -0.6897]","[1.2479 -0.1153 -0.1571]","[1.1439 -0.2776 -0.104]","[1.2504 -0.1317 -0.1236]","[1.0054 -0.359 0.3752]","[0.9867 -0.5117 0.2832]","[1.1722 -0.3215 0.0554]","[0.7228 -0.7421 1.6844]","[0.8628 -0.6777 1.4999]","[0.9828 -0.6146 1.2869]","[0.9951 -0.3793 -0.9073]","[1.1181 -0.2102 1.2746]","[1.0453 -0.2407 1.6073]","[0.9718 -0.2765 1.9174]","[0.8467 -0.6224 0.6764]","[0.7202 -0.8372 0.5125]","[0.8913 -0.2438 0.739]","[0.7972 -0.7502 0.855]","[1.0672 -0.1974 0.5413]","[1.3548 -0.2331 0.0912]","[0.6206 -0.9336 0.4029]","[0.8048 -0.7736 0.4376]","[0.8898 -0.6564 0.4029]","[0.9333 -0.483 0.4299]","[0.9498 -0.3539 0.487]","[0.9751 -0.2612 0.5524]","[1.1664 -0.0754 0.7317]","[0.6575 -0.9306 0.1301]","[0.7576 -0.825 0.8656]","[1.4655 -0.0332 -0.073]","[1.0849 -0.2633 0.3187]","[0.0536 -1.026 0.5921]","[0.9884 -0.192 0.6236]","[1.0712 -0.3312 0.0414]","[0.7699 -0.7 0.7793]","[1.3097 -0.2367 0.1831]","[0.0548 -0.973 -0.3561]","[0.8655 -0.2504 0.7844]","[1.4003 -0.1538 0.2643]","[0.6351 -0.7281 -0.9686]","[0.4946 -0.7091 -1.1476]","[0.3306 -1.0094 0.0347]","[0.5253 -0.8418 -0.7917]","[0.4438 -0.9585 0.8946]","[0.9683 -0.3588 -1.445]","[1.337 -0.0224 -0.114]","[1.054 -0.3489 0.2186]","[0.5841 -0.9208 0.6431]","[0.8704 -0.5343 0.7426]","[0.8936 -0.4532 0.7393]","[0.9625 -0.4156 -0.7192]","[0.633 -0.9238 -0.1548]","[0.967 -0.1853 -1.6414]","[0.7602 -0.4602 -1.4535]","[0.6404 -0.5752 -1.3254]","[1.0678 0.0102 1.612]","[0.997 0.0103 -1.6618]","[0.8973 -0.3777 0.7499]","[0.8846 -0.3081 0.7687]","[0.8679 -0.267 0.7765]","[0.6644 -0.8895 0.8825]","[0.8882 -0.3325 0.8779]","[0.9031 -0.4129 0.9126]","[0.8984 -0.4929 0.916]","[0.879 -0.5734 0.8884]","[0.8515 -0.623 0.8487]","[0.1935 -1.0119 0.9296]","[0.842 -0.5915 0.7549]","[1.2531 0.0176 -0.2672]","[1.1387 -0.3273 -0.3043]","[1.2688 -0.2304 -0.0196]","[1.2414 -0.1284 -0.2745]","[1.1238 0.0099 0.9282]","[0.7301 -0.6039 -1.1531]","[0.8403 -0.4855 -1.2993]","[1.0734 -0.1927 -1.5411]","[0.3234 -0.8161 -0.9565]","[0.8757 -0.2764 0.8221]","[1.2051 -0.1373 0.5091]","[1.0996 0.0118 -1.5611]","[0.8841 -0.3358 -1.5655]","[0.3546 -0.9854 -0.2694]","[1.1105 -0.2023 -0.754]","[1.1268 -0.2189 -0.7872]","[1.1412 -0.2347 -0.8405]","[1.131 -0.2476 -0.9124]","[1.0721 -0.2745 -1.025]","[0.9997 -0.3726 -0.5991]","[0.9954 -0.4012 -0.5859]","[0.9958 -0.4269 -0.563]","[0.9808 -0.5002 -0.4853]","[0.824 -0.8119 -0.2001]","[1.1089 -0.1338 0.6423]","[0.9283 -0.1793 0.8756]","[0.8942 -0.2371 0.8549]","[0.9873 -0.3485 -0.5839]","[0.6883 -0.8204 -0.5614]","[1.0563 -0.1048 0.8951]","[1.0339 -0.311 -1.1495]","[1.3832 0.0141 0.4848]","[1.27 -0.0718 0.5888]","[1.29 0.0131 0.6235]","[1.2163 -0.2061 0.2946]","[1.143 0.0131 -1.4179]","[1.1391 0.0157 -1.2509]","[1.1121 -0.1563 -1.2416]","[0.8861 -0.5261 -0.8406]","[1.0489 -0.4056 -0.0744]","[0.9515 -0.4283 -1.0146]","[1.0038 -0.6134 -0.0642]","[1.0195 -0.4938 -0.2181]","[0.9225 -0.6941 -0.292]","[1.1132 -0.1835 -1.403]","[1.1494 -0.2666 0.2179]","[0.8173 -0.588 -0.9728]","[0.8967 -0.4675 -1.1436]","[0.8751 -0.6046 -0.6474]","[0.6061 -0.9015 -0.4005]","[0.7992 -0.7077 -0.6976]","[0.3998 -0.9352 -0.5489]","[0.9659 -0.5761 -0.385]","[1.1388 -0.1979 0.4135]","[1.3834 -0.2023 0.029]","[1.2766 -0.2694 -0.0047]","[1.4461 -0.1581 0.1214]","[0.9505 -0.2507 0.977]","[0.9664 -0.3999 1.0379]","[0.9598 -0.5305 1.0454]","[0.9232 -0.6391 1.0191]","[0.8708 -0.7132 0.9586]","[0.7376 -0.7606 0.7321]","[0.3368 -1.0183 0.3269]","[0.8144 -0.6866 0.572]","[0.8721 -0.5904 0.5431]","[0.9088 -0.4684 0.5527]","[0.9198 -0.3544 0.5869]","[0.9261 -0.2685 0.6325]","[0.9295 -0.2111 0.6754]","[-0.0047 -1.0126 0.2797]","[1.2311 -0.2705 -0.0391]","[1.2883 -0.1378 0.3879]","[1.4589 -0.1322 0.0203]","[1.4233 -0.081 -0.0492]","[1.4134 -0.1334 -0.0032]","[1.1998 -0.2471 -0.0818]","[1.4507 -0.0628 -0.0629]","[1.3372 -0.0543 -0.1008]","[0.8819 -0.2178 0.7751]","[0.9418 -0.1661 0.7483]","[1.0127 -0.14 0.7302]","[0.824 -0.6515 0.819]","[0.818 -0.6975 0.8512]","[1.3522 0.0923 0.463]","[0.8161 0.6487 0.8089]","[1.336 0.109 -0.0689]","[0.3761 0.9763 1.2662]","[0.9154 0.3791 0.6972]","[0.9111 0.4695 0.6901]","[0.8888 0.5594 0.6942]","[0.8052 0.6821 0.7591]","[0.9062 0.3053 0.7238]","[0.9298 0.5161 1.0061]","[0.9294 0.4187 0.9988]","[0.9025 0.6055 0.9846]","[0.8689 0.6647 0.9402]","[0.7671 0.7524 0.6652]","[1.0105 0.3695 -1.2729]","[0.7855 0.6853 0.835]","[0.3553 1.0086 0.678]","[0.673 0.8525 0.7355]","[1.0421 0.4852 0.1362]","[1.2615 0.1601 -0.4477]","[1.2226 0.1469 -0.5789]","[1.1949 0.3012 -0.4633]","[1.1004 0.391 -0.4978]","[1.1705 0.2514 -0.5691]","[1.0821 0.3317 -0.5707]","[0.9318 0.4972 -0.7405]","[1.506 0.0961 0.0063]","[1.5243 0.1061 0.1489]","[0.8536 0.8048 1.07]","[1.0367 0.2854 0.4707]","[1.2605 0.325 0.063]","[1.2237 0.3285 0.1391]","[0.9184 0.7486 0.1679]","[1.4551 0.0999 0.3212]","[1.0064 0.5919 1.2109]","[0.941 0.7179 1.1663]","[0.546 0.8945 1.5222]","[1.0917 0.1941 1.1014]","[0.9027 0.3342 0.9558]","[0.9057 0.5713 -0.5721]","[0.1552 0.9089 -0.6353]","[1.23 0.2604 -0.0232]","[1.2444 0.1812 -0.0774]","[0.906 0.5037 -0.5849]","[0.9308 0.4583 -0.5875]","[0.892 0.7702 1.2531]","[1.2103 0.3342 0.007]","[1.0579 0.4193 1.1996]","[1.0724 0.4385 1.3185]","[0.8799 0.5349 1.8723]","[0.7377 0.8303 1.397]","[0.9797 0.4782 1.608]","[0.7728 0.8585 1.1256]","[0.5837 0.9174 1.19]","[1.2529 0.1561 -0.5285]","[1.1857 0.2732 -0.5298]","[1.0975 0.3613 -0.5362]","[1.2146 0.2391 -0.0508]","[0.9195 0.4825 -0.5863]","[0.9803 0.4293 -0.6695]","[0.9336 0.4418 -0.5869]","[1.3658 0.2001 0.016]","[1.065 0.3138 -0.5592]","[1.1311 0.2329 -0.5709]","[1.1817 0.1359 -0.5873]","[1.1314 0.1663 -1.0969]","[1.2034 0.1644 -0.9621]","[1.2078 0.159 -0.8827]","[1.1798 0.151 -0.8164]","[1.1607 0.1406 -0.7695]","[1.0478 0.3251 -0.6968]","[1.0621 0.3417 -0.7108]","[1.0717 0.3646 -0.7428]","[1.0546 0.3823 -0.7863]","[1.0669 0.4505 -0.3522]","[0 0.9995 0.0308]","[0.9792 0.3784 -0.6616]","[0.985 0.4049 -0.6608]","[1.2486 0.1482 -0.1465]","[1.1448 0.3072 -0.0842]","[1.2509 0.164 -0.1132]","[1.0069 0.3816 0.3996]","[0.9892 0.5328 0.3183]","[1.1722 0.348 0.0793]","[0.7222 0.7546 1.7325]","[0.863 0.69 1.5419]","[0.984 0.6253 1.3235]","[0.9972 0.4118 -0.8793]","[1.1183 0.2261 1.2864]","[1.0455 0.2603 1.6218]","[0.9712 0.2952 1.9364]","[0.8471 0.6373 0.7161]","[0.7203 0.8469 0.5671]","[0.8929 0.2612 0.7522]","[0.798 0.7603 0.9002]","[1.0675 0.2203 0.5547]","[1.3547 0.26 0.1075]","[0.621 0.9396 0.4638]","[0.805 0.7858 0.4885]","[0.891 0.674 0.4477]","[0.9353 0.5032 0.4622]","[0.9508 0.3745 0.5105]","[0.9758 0.2814 0.5694]","[1.1673 0.0996 0.7375]","[0.6569 0.9371 0.191]","[0.7574 0.8348 0.9168]","[1.4649 0.0648 -0.0691]","[1.085 0.288 0.3365]","[0.0532 1.0285 0.6538]","[0.9895 0.2134 0.6357]","[1.0715 0.3577 0.0653]","[0.77 0.7113 0.8213]","[1.3099 0.2624 0.1995]","[0.0537 0.9717 -0.296]","[0.8665 0.2676 0.7968]","[1.4004 0.1814 0.2754]","[0.6382 0.7399 -0.9208]","[0.4952 0.7161 -1.1018]","[0.3299 1.0106 0.1003]","[0.5257 0.8483 -0.7375]","[0.4421 0.9652 0.9537]","[0.9681 0.3779 -1.4198]","[1.3374 0.0563 -0.1105]","[1.0544 0.3735 0.2439]","[0.5826 0.9264 0.7008]","[0.8711 0.5515 0.7748]","[0.8941 0.4702 0.7658]","[0.965 0.4521 -0.6858]","[0.6346 0.932 -0.0934]","[0.967 0.2049 -1.6278]","[0.7601 0.4744 -1.423]","[0.6405 0.5865 -1.2877]","[0.8987 0.3941 0.7704]","[0.8858 0.3241 0.7857]","[0.8689 0.2839 0.7901]","[0.6639 0.897 0.9379]","[0.8901 0.3475 0.8962]","[0.9046 0.4263 0.9364]","[0.9007 0.5062 0.9447]","[0.8799 0.5866 0.923]","[0.8531 0.6361 0.8864]","[0.1923 1.0177 0.9906]","[0.8421 0.6076 0.7906]","[1.1391 0.3585 -0.279]","[1.2692 0.2591 -0.0023]","[1.2408 0.1631 -0.2627]","[0.7312 0.6188 -1.1125]","[0.8418 0.5016 -1.2661]","[1.0746 0.2139 -1.5278]","[0.3235 0.8183 -0.904]","[0.877 0.2927 0.8368]","[1.2051 0.1624 0.5181]","[0.8843 0.3527 -1.542]","[0.3544 0.9859 -0.2046]","[1.1113 0.2408 -0.7377]","[1.1273 0.2589 -0.7701]","[1.1419 0.2743 -0.8211]","[1.1317 0.2863 -0.8926]","[1.0735 0.3071 -1.0045]","[1.001 0.4093 -0.5695]","[0.9981 0.438 -0.5536]","[0.9974 0.4638 -0.5292]","[0.9822 0.5315 -0.4472]","[0.8271 0.826 -0.1458]","[1.1101 0.1574 0.6516]","[0.9294 0.1978 0.8853]","[0.8947 0.2539 0.8673]","[0.9891 0.3844 -0.5569]","[0.6909 0.8329 -0.5072]","[1.0569 0.1247 0.9013]","[1.0357 0.3374 -1.1266]","[1.27 0.0975 0.5944]","[1.2168 0.2319 0.3097]","[1.113 0.1849 -1.2293]","[0.8896 0.5519 -0.8028]","[1.0503 0.433 -0.0449]","[0.9542 0.4545 -0.9838]","[1.0074 0.6353 -0.0217]","[1.022 0.521 -0.1831]","[0.9267 0.7146 -0.2449]","[1.1146 0.2078 -1.3894]","[1.1493 0.2915 0.2372]","[0.8201 0.6078 -0.9312]","[0.8984 0.489 -1.1112]","[0.8788 0.629 -0.6036]","[0.6076 0.91 -0.3412]","[0.8028 0.725 -0.6488]","[0.4004 0.9376 -0.4882]","[0.97 0.6021 -0.3445]","[1.1394 0.2225 0.4274]","[1.3836 0.2308 0.0434]","[1.2767 0.2983 0.0149]","[1.4469 0.1875 0.1327]","[0.9511 0.2681 0.9911]","[0.9676 0.4147 1.0617]","[0.9618 0.5428 1.0765]","[0.9249 0.6504 1.0561]","[0.8719 0.7243 1.0004]","[0.7383 0.7716 0.7793]","[0.3356 1.019 0.3913]","[0.8145 0.7012 0.6165]","[0.8731 0.6076 0.5823]","[0.9097 0.4868 0.5823]","[0.921 0.3728 0.6092]","[0.9274 0.2878 0.6488]","[0.9303 0.2303 0.6876]","[-0.0043 1.0139 0.3413]","[1.2308 0.2995 -0.0195]","[1.2882 0.1649 0.3982]","[1.459 0.1626 0.0292]","[1.4237 0.1116 -0.042]","[1.4134 0.1628 0.0072]","[1.1996 0.2768 -0.0641]","[1.4503 0.0942 -0.0572]","[1.3371 0.0868 -0.0955]","[0.883 0.2351 0.7862]","[0.9421 0.1861 0.7569]","[1.0131 0.1619 0.7387]","[0.8249 0.6643 0.8581]","[0.8196 0.7082 0.8931]"]
    ,"angryeyes":["[1.3278 0.0057 -0.7006]","[1.5187 0.0085 -0.1967]","[1.2831 0.0064 -0.3451]","[1.3533 -0.0721 0.2517]","[1.537 0.0087 -0.0637]","[1.4826 0.0092 0.1202]","[1.2008 0.0105 0.5786]","[0.8151 -0.6284 0.6499]","[1.1227 0.0107 0.8913]","[1.1328 0.0115 1.0651]","[0.983 0.0117 1.7454]","[1.3195 0.0051 -0.7725]","[1.2909 0.0056 -0.8249]","[1.2475 0.0064 -0.8467]","[1.2253 0.0076 -0.9025]","[1.2468 0.008 -0.9656]","[1.2705 0.0087 -1.0383]","[1.2593 0.0095 -1.1105]","[1.1667 0.01 -1.1915]","[1.4751 0.0078 -0.2585]","[1.339 -0.0899 -0.2611]","[0.3795 -0.9812 1.1392]","[0.9099 -0.3517 0.5585]","[0.9076 -0.4385 0.5435]","[0.8886 -0.5303 0.5345]","[0.8068 -0.6603 0.6044]","[0.9025 -0.2847 0.5861]","[0.9197 -0.5088 0.8549]","[0.9203 -0.4077 0.8541]","[0.8963 -0.5978 0.8299]","[0.8652 -0.6548 0.7861]","[0.7774 -0.7323 0.5001]","[1.0293 -0.338 -1.3185]","[0.7866 -0.6713 0.6827]","[0.3674 -1.0105 0.5628]","[0.6852 -0.8462 0.5828]","[1.0492 -0.4396 -0.0675]","[1.3102 -0.1123 -0.6764]","[1.2745 -0.0901 -0.8224]","[1.2546 -0.2287 -0.7211]","[1.1873 -0.2933 -0.779]","[1.236 -0.1743 -0.8297]","[1.1704 -0.2349 -0.8486]","[1.0343 -0.4195 -0.9748]","[1.5087 -0.072 -0.1916]","[1.526 -0.0873 -0.0652]","[0.8664 -0.7901 0.882]","[1.0403 -0.2635 0.2951]","[1.262 -0.3015 -0.1554]","[1.2236 -0.307 -0.0803]","[0.9379 -0.6834 -0.0406]","[1.4544 -0.0805 0.1045]","[1.0177 -0.5786 1.0031]","[0.9556 -0.7033 0.9629]","[0.5504 -0.8971 1.3642]","[1.0926 -0.1796 0.9171]","[0.8949 -0.3191 0.8145]","[1.0053 -0.4813 -0.8576]","[0.1558 -0.9006 -0.6631]","[1.2335 -0.234 -0.2361]","[1.2503 -0.1592 -0.2814]","[1.0304 -0.3777 -0.8935]","[1.0562 -0.3346 -0.8804]","[0.9071 -0.7539 1.0426]","[1.2141 -0.3051 -0.2154]","[1.0615 -0.4076 1.0002]","[1.0752 -0.4284 1.1049]","[0.8724 -0.5314 1.6683]","[0.7479 -0.8232 1.2097]","[0.9805 -0.4699 1.3897]","[0.7852 -0.8465 0.9399]","[0.5944 -0.9142 1.0337]","[1.306 -0.1029 -0.7614]","[1.2522 -0.1981 -0.7896]","[1.187 -0.2641 -0.8172]","[1.2227 -0.2121 -0.2633]","[1.0469 -0.3543 -0.8914]","[1.0989 -0.3213 -0.9138]","[1.0571 -0.3257 -0.8645]","[1.367 -0.1787 -0.1828]","[1.1501 -0.2147 -0.8397]","[1.197 -0.1528 -0.8394]","[1.2329 -0.0764 -0.8417]","[1.1605 -0.1178 -1.1881]","[1.2512 -0.1155 -1.099]","[1.2585 -0.1081 -1.0241]","[1.2331 -0.0977 -0.951]","[1.2132 -0.0876 -0.8987]","[1.1404 -0.235 -0.8854]","[1.1543 -0.2507 -0.9052]","[1.1636 -0.2758 -0.9415]","[1.1495 -0.2975 -0.9832]","[1.138 -0.3741 -0.5995]","[0 -0.9998 -0.021]","[1.3476 0.0077 -0.2988]","[1.0941 -0.2764 -0.8817]","[1.1015 -0.2969 -0.8963]","[1.2567 -0.1241 -0.3462]","[1.1561 -0.2734 -0.3087]","[1.2574 -0.1418 -0.3139]","[1.011 -0.347 0.218]","[0.9987 -0.485 0.119]","[1.1753 -0.3199 -0.1417]","[0.7234 -0.7551 1.5463]","[0.8683 -0.6823 1.3315]","[0.994 -0.6139 1.1036]","[1.0825 -0.3389 -1.0509]","[1.1197 -0.2107 1.0842]","[1.0445 -0.2456 1.4075]","[0.9582 -0.2844 1.7304]","[0.8494 -0.6115 0.5545]","[0.7352 -0.832 0.3964]","[0.889 -0.2443 0.6107]","[0.807 -0.748 0.7429]","[1.0704 -0.2033 0.3772]","[1.3544 -0.242 -0.105]","[0.6372 -0.9278 0.3084]","[0.8227 -0.7626 0.2974]","[0.9092 -0.6417 0.2458]","[0.9465 -0.4663 0.2799]","[0.9559 -0.3456 0.3458]","[0.9793 -0.2629 0.4082]","[1.167 -0.0805 0.5444]","[0.6777 -0.8988 0.0246]","[0.7697 -0.8266 0.7544]","[1.4685 -0.0419 -0.2557]","[1.0868 -0.263 0.145]","[0.0569 -1.034 0.5736]","[0.993 -0.1976 0.4684]","[1.0794 -0.3245 -0.1541]","[0.7731 -0.6969 0.6743]","[1.3078 -0.2468 -0.0127]","[0.0521 -0.9678 -0.3335]","[0.8629 -0.254 0.6554]","[1.3981 -0.1662 0.0618]","[0.6681 -0.7049 -1.0022]","[0.5076 -0.7028 -1.1271]","[0.3415 -0.9935 -0.0062]","[0.5431 -0.8082 -0.8143]","[0.4539 -0.9665 0.8208]","[0.9736 -0.3589 -1.4332]","[1.3397 -0.0335 -0.2954]","[1.0574 -0.3386 0.0448]","[0.5958 -0.9245 0.558]","[0.8669 -0.5214 0.6165]","[0.8883 -0.4387 0.617]","[1.0828 -0.3468 -0.9348]","[0.6502 -0.8705 -0.2421]","[0.9553 -0.1897 -1.6108]","[0.7689 -0.463 -1.4215]","[0.6568 -0.5755 -1.3007]","[1.0639 0.0119 1.407]","[0.983 0.0117 -1.635]","[0.8913 -0.3669 0.6309]","[0.8792 -0.3025 0.6498]","[0.8646 -0.2658 0.6533]","[0.6753 -0.8933 0.7808]","[0.8814 -0.3315 0.7515]","[0.894 -0.4116 0.7909]","[0.8896 -0.4957 0.7927]","[0.8728 -0.5781 0.7665]","[0.8485 -0.6263 0.7292]","[0.1964 -1.0243 0.8856]","[0.8402 -0.5815 0.6299]","[1.2758 0.0065 -0.4579]","[1.1846 -0.307 -0.5142]","[1.2732 -0.2344 -0.2112]","[1.2677 -0.1291 -0.474]","[1.1212 0.0103 0.7441]","[0.7643 -0.5971 -1.1761]","[0.8611 -0.4853 -1.3053]","[1.0704 -0.1969 -1.5315]","[0.3281 -0.8075 -0.9299]","[0.874 -0.2797 0.6922]","[1.2077 -0.1442 0.3209]","[1.0948 0.0121 -1.5542]","[0.8824 -0.3395 -1.5308]","[0.3623 -0.9593 -0.2935]","[1.1808 -0.1684 -0.8922]","[1.1991 -0.1847 -0.9289]","[1.214 -0.2036 -0.9844]","[1.2065 -0.2183 -1.051]","[1.1345 -0.2428 -1.1263]","[1.1126 -0.2904 -0.8627]","[1.112 -0.319 -0.8537]","[1.1098 -0.3469 -0.8301]","[1.0775 -0.4354 -0.7213]","[0.8456 -0.7425 -0.3215]","[1.1113 -0.141 0.4655]","[0.9278 -0.1819 0.7242]","[0.8933 -0.2408 0.7228]","[1.0955 -0.2695 -0.8452]","[0.7156 -0.7584 -0.6421]","[1.0529 -0.1073 0.7229]","[1.0722 -0.2919 -1.2135]","[1.3836 0.0096 0.2752]","[1.2727 -0.0793 0.3927]","[1.2911 0.0101 0.4211]","[1.2172 -0.2127 0.1066]","[1.1466 0.0112 -1.4337]","[1.1472 0.0108 -1.2999]","[1.1274 -0.1471 -1.2913]","[0.9689 -0.5059 -0.9915]","[1.0697 -0.395 -0.263]","[1.0164 -0.4122 -1.1166]","[1.0219 -0.564 -0.2296]","[1.0629 -0.4597 -0.4045]","[0.955 -0.6314 -0.4457]","[1.1197 -0.1812 -1.4174]","[1.1495 -0.269 0.034]","[0.8741 -0.5762 -1.0583]","[0.9342 -0.4621 -1.1972]","[0.9515 -0.5667 -0.8339]","[0.6231 -0.8438 -0.4684]","[0.8515 -0.6657 -0.8116]","[0.4083 -0.9066 -0.563]","[1.0311 -0.5186 -0.5904]","[1.142 -0.2038 0.2345]","[1.3842 -0.2095 -0.1605]","[1.2787 -0.2729 -0.1994]","[1.4464 -0.17 -0.0784]","[0.9506 -0.2522 0.831]","[0.9701 -0.402 0.8949]","[0.966 -0.5335 0.9027]","[0.9313 -0.6396 0.8797]","[0.8817 -0.7104 0.8298]","[0.7468 -0.7589 0.6288]","[0.3491 -1.0148 0.2806]","[0.8251 -0.6769 0.4436]","[0.8855 -0.5805 0.4061]","[0.9169 -0.4569 0.4213]","[0.9204 -0.3467 0.4604]","[0.928 -0.2688 0.502]","[0.9305 -0.2142 0.5335]","[-0.0016 -1.0161 0.2776]","[1.2354 -0.2713 -0.2378]","[1.2891 -0.1462 0.1906]","[1.4605 -0.1421 -0.1709]","[1.4254 -0.0919 -0.2314]","[1.4149 -0.1411 -0.189]","[1.2082 -0.2462 -0.2828]","[1.4525 -0.0725 -0.2452]","[1.3406 -0.0671 -0.284]","[0.8792 -0.2213 0.6399]","[0.9414 -0.1704 0.5979]","[1.0137 -0.1452 0.5667]","[0.8244 -0.6532 0.7025]","[0.8184 -0.6957 0.7408]","[1.3536 0.092 0.2548]","[0.8168 0.6536 0.6777]","[1.3389 0.1044 -0.2561]","[0.3823 0.9961 1.1759]","[0.9117 0.375 0.5732]","[0.9103 0.4628 0.562]","[0.8908 0.5548 0.5572]","[0.8086 0.6828 0.6331]","[0.9041 0.3065 0.5983]","[0.922 0.5336 0.8791]","[0.9221 0.4319 0.8724]","[0.8991 0.6222 0.8574]","[0.868 0.6788 0.8158]","[0.779 0.7535 0.5306]","[1.0294 0.3582 -1.3047]","[0.7887 0.6954 0.7124]","[0.3686 1.0201 0.6029]","[0.6867 0.8634 0.6188]","[1.0508 0.4582 -0.0516]","[1.3105 0.1224 -0.6719]","[1.275 0.0998 -0.8194]","[1.2559 0.2385 -0.7125]","[1.1895 0.3047 -0.7679]","[1.238 0.1835 -0.8237]","[1.1725 0.2452 -0.8405]","[1.0361 0.4337 -0.9601]","[1.509 0.0884 -0.1881]","[1.5261 0.1045 -0.0618]","[0.8673 0.8129 0.9187]","[1.0427 0.2843 0.3054]","[1.2639 0.3156 -0.1456]","[1.2258 0.3214 -0.07]","[0.938 0.7012 -0.0141]","[1.4553 0.099 0.1072]","[1.0169 0.6044 1.0317]","[0.9557 0.7286 0.9973]","[0.5523 0.917 1.3975]","[1.0921 0.2027 0.9245]","[0.8967 0.3433 0.8277]","[1.006 0.4942 -0.84]","[0.1528 0.8987 -0.6197]","[1.2359 0.2477 -0.2271]","[1.2512 0.1733 -0.2753]","[1.0331 0.3913 -0.8805]","[1.0584 0.3481 -0.8693]","[0.9076 0.779 1.0797]","[1.2168 0.3185 -0.2056]","[1.0616 0.4331 1.0198]","[1.0748 0.4536 1.1263]","[0.873 0.555 1.6893]","[0.7502 0.846 1.2447]","[0.9812 0.4945 1.4099]","[0.7865 0.8681 0.9788]","[0.5959 0.9325 1.0709]","[1.3066 0.1126 -0.7578]","[1.2533 0.2073 -0.7824]","[1.1887 0.2752 -0.8082]","[1.2239 0.2257 -0.2563]","[1.0485 0.3683 -0.879]","[1.102 0.3345 -0.9028]","[1.0583 0.339 -0.8546]","[1.3669 0.1929 -0.1737]","[1.1522 0.2251 -0.833]","[1.198 0.1634 -0.8348]","[1.2337 0.0872 -0.8395]","[1.1608 0.1377 -1.1832]","[1.2527 0.1327 -1.0956]","[1.2596 0.1245 -1.0205]","[1.2343 0.1127 -0.9481]","[1.2143 0.1024 -0.8955]","[1.1422 0.2485 -0.8776]","[1.1564 0.2642 -0.8973]","[1.1662 0.2899 -0.9331]","[1.1512 0.3127 -0.975]","[1.1411 0.3865 -0.586]","[0 0.9998 0.021]","[1.0964 0.2894 -0.873]","[1.1037 0.3104 -0.8868]","[1.2578 0.1377 -0.3418]","[1.1586 0.2868 -0.3019]","[1.2586 0.1549 -0.3092]","[1.013 0.3682 0.2309]","[1.0004 0.5057 0.1372]","[1.1776 0.3346 -0.1314]","[0.7251 0.7776 1.5763]","[0.869 0.7062 1.3614]","[0.9932 0.6394 1.1347]","[1.084 0.355 -1.0389]","[1.1184 0.2354 1.0938]","[1.0446 0.2701 1.4172]","[0.9578 0.3085 1.7416]","[0.8516 0.6353 0.5813]","[0.7374 0.8486 0.4303]","[0.8904 0.2664 0.621]","[0.8083 0.7692 0.776]","[1.072 0.2252 0.385]","[1.3556 0.2574 -0.0952]","[0.6382 0.9409 0.3465]","[0.8243 0.7812 0.3282]","[0.9121 0.6622 0.2712]","[0.9491 0.488 0.2978]","[0.9579 0.3678 0.3596]","[0.9811 0.2846 0.4188]","[1.1672 0.102 0.5483]","[0.678 0.9113 0.0617]","[0.7709 0.8466 0.7902]","[1.4678 0.0573 -0.2521]","[1.0887 0.2822 0.1538]","[0.0578 1.0392 0.612]","[0.9944 0.2197 0.4764]","[1.0814 0.339 -0.1445]","[0.7749 0.7194 0.705]","[1.3094 0.2624 -0.0049]","[0.0503 0.9656 -0.2899]","[0.8643 0.2767 0.6666]","[1.3988 0.1841 0.0679]","[0.6668 0.7147 -0.9685]","[0.5056 0.7102 -1.0901]","[0.3411 0.9994 0.0372]","[0.5409 0.8141 -0.7755]","[0.4552 0.9802 0.8593]","[0.9723 0.3793 -1.4174]","[1.3403 0.0483 -0.2928]","[1.0592 0.357 0.056]","[0.5969 0.9386 0.5961]","[0.8689 0.5478 0.6393]","[0.8897 0.4644 0.6357]","[1.0863 0.3609 -0.9228]","[0.6505 0.8819 -0.2053]","[0.9545 0.2137 -1.6023]","[0.7682 0.4809 -1.3996]","[0.6559 0.5884 -1.2717]","[0.8929 0.3912 0.6463]","[0.8806 0.3253 0.663]","[0.8659 0.2886 0.6651]","[0.6756 0.9108 0.8194]","[0.884 0.3555 0.766]","[0.8968 0.4362 0.809]","[0.892 0.521 0.8144]","[0.8748 0.6038 0.7927]","[0.851 0.6516 0.7576]","[0.1987 1.0342 0.9229]","[0.8418 0.6077 0.655]","[1.1864 0.3196 -0.5036]","[1.275 0.2476 -0.2018]","[1.2686 0.142 -0.4684]","[0.7635 0.6113 -1.1485]","[0.86 0.5016 -1.2825]","[1.0701 0.2195 -1.5233]","[0.3268 0.809 -0.8892]","[0.8752 0.3028 0.7044]","[1.209 0.1651 0.3264]","[0.8818 0.3606 -1.5152]","[0.3613 0.9625 -0.2495]","[1.1828 0.1822 -0.8863]","[1.201 0.1992 -0.9234]","[1.2168 0.2187 -0.9784]","[1.2082 0.2351 -1.0443]","[1.1355 0.2603 -1.1178]","[1.1141 0.3022 -0.8531]","[1.1142 0.331 -0.8427]","[1.1119 0.3586 -0.8186]","[1.0792 0.4475 -0.7054]","[0.8458 0.7562 -0.2913]","[1.1126 0.1628 0.4714]","[0.9299 0.204 0.732]","[0.8949 0.2628 0.733]","[1.0976 0.2804 -0.8371]","[0.7147 0.7683 -0.6085]","[1.0538 0.1291 0.7276]","[1.0735 0.3099 -1.2019]","[1.2732 0.0997 0.3962]","[1.2192 0.2307 0.1145]","[1.1272 0.1675 -1.2851]","[0.9696 0.5206 -0.9714]","[1.0721 0.4094 -0.2503]","[1.0165 0.4286 -1.0997]","[1.0229 0.5812 -0.2086]","[1.0651 0.4742 -0.3876]","[0.9558 0.6461 -0.4211]","[1.1198 0.2025 -1.41]","[1.1521 0.2854 0.0427]","[0.873 0.5909 -1.0339]","[0.9335 0.479 -1.1776]","[0.9515 0.5797 -0.8107]","[0.6227 0.8527 -0.431]","[0.8506 0.677 -0.7824]","[0.4071 0.91 -0.5205]","[1.0327 0.5318 -0.5717]","[1.1438 0.2237 0.2423]","[1.3851 0.224 -0.1507]","[1.2804 0.2866 -0.1899]","[1.4478 0.1872 -0.0714]","[0.952 0.2757 0.8415]","[0.9704 0.4263 0.9137]","[0.9666 0.5578 0.9276]","[0.9327 0.6642 0.9087]","[0.8834 0.7344 0.8622]","[0.7484 0.7799 0.6617]","[0.3492 1.0223 0.3219]","[0.8265 0.699 0.4722]","[0.8875 0.6032 0.4305]","[0.9183 0.4794 0.44]","[0.9225 0.369 0.4751]","[0.9299 0.2911 0.513]","[0.9318 0.2359 0.5425]","[-0.0007 1.019 0.3178]","[1.2376 0.2847 -0.2287]","[1.2898 0.1657 0.1963]","[1.4609 0.1582 -0.1641]","[1.4258 0.1065 -0.2261]","[1.4153 0.1566 -0.1812]","[1.2105 0.2588 -0.2759]","[1.4526 0.088 -0.241]","[1.3408 0.0814 -0.2803]","[0.8806 0.2432 0.6495]","[0.9425 0.1921 0.6052]","[1.0144 0.1672 0.5728]","[0.826 0.6774 0.7318]","[0.8209 0.7177 0.7727]"]
}]])

function GPS_FaceFeatures(face)
    local idle = GPS_ExpressionFace.idle
    local t = {1}
    for _,subtable in ipairs(face_points) do
        for _,i in ipairs(subtable) do
            local v=face[i+1]-idle[i+1]
            table.insert(t,v.x)
            table.insert(t,v.y)
            table.insert(t,v.z)
        end
    end
    return t
end

GPS_FlexRegression = nil

GPS_FlexRegressionTargets = {}
GPS_FlexRegressionTargetIndex = {}
for k,_ in pairs(GPS_ExpressionFace) do
    expression = GPS_Expressions[k]
    for flex,weight in pairs(expression) do
        if not GPS_FlexRegressionTargetIndex[flex] then
            table.insert(GPS_FlexRegressionTargets, flex)
            GPS_FlexRegressionTargetIndex[flex]=#GPS_FlexRegressionTargets
        end
    end
end

concommand.Add("gposer_copyface", function(ply, cmd, args, argstr)
    if GPS_NormalizedFace then
        SetClipboardText(util.TableToJSON(GPS_NormalizedFace))
    end
end)

concommand.Add("gposer_flex", function(ply, cmd, args, argstr)
    GPOSER_TESTFLEX = nil
    for i=0,Me:GetFlexNum()-1 do
        print(i, Me:GetFlexName(i))
    end

    for i,v in ipairs(args) do
        GPOSER_TESTFLEX=GPOSER_TESTFLEX or {}
        
        v=v:Split("=")
        
        local flex = Me:GetFlexIDByName(v[1])
        if flex then
            GPOSER_TESTFLEX[flex]=tonumber(v[2])
        else
            print("BAD FLEX NAME", v[1])
        end
    end

    PrintTable(GPOSER_TESTFLEX or {})
end)



local face_landmark_ids,face_landmark_names = {},{}
for k,v in pairs(face_landmarks) do
    table.insert(face_landmark_names, k)
    table.insert(face_landmark_ids, v)
end

function GPS_ApplyFaceLandmarks()
    GPoserCommand("face",-1)
    for i,v in ipairs(face_landmark_ids) do
        GPoserCommand("face",v)
    end

    -- for i=0,467 do
    --     GPoserCommand("face",i)
    -- end
end

if GPoserVersion then GPS_ApplyFaceLandmarks() end

function GPS_Print(msg)
    MsgC(Color(128, 255, 255, 255), "GPoser: " .. msg .. "\n")
end

concommand.Add("gposer", function(ply, cmd, args, argstr)
    -- if argstr == "low" then
    --     if not GPoserVersion then
    --         require("gposer")
    --     end

    --     GPoserStart(256, 256, 20, 0, 1)

    --     return
    -- end

    -- if argstr == "verylow" then
    --     if not GPoserVersion then
    --         require("gposer")
    --     end

    --     GPoserStart(256, 256, 5, 0, 1)

    --     return
    -- end

    if not GPoserVersion then
        require("gposer")

        if GPoserVersion != "0.2" then
            GPS_Print("THERE IS A NEW VERSION AVAILABLE GET IT FOR BETTER TRACKING")
        else
            GPS_ApplyFaceLandmarks()
        end

        GPoserStart()

        return
    end

    if GPOSERSTOPPED then
        GPOSERSTOPPED = false
        GPoserStart()

        return
    end

    if #args > 0 then
        -- if args[1] == "quality" then
        --     GPOSER_MODEL = tonumber(args[2])

        --     if GPOSER_MODEL ~= 0 and GPOSER_MODEL ~= 2 then
        --         GPOSER_MODEL = nil
        --     end

        --     GPoserStartAuto()
        -- else
            
        if args[1] == "stop" then
            GPoserStop()
            GPOSERSTOPPED = true
        else
            GPoserCommand(args[1], tonumber(args[2]) or 0)
        end
    else
        GPS_Print("Commands:")
        GPS_Print("gposer preview 0/1 (toggle showing your webcam, in a separate window for privacy)")
        GPS_Print("gposer quality 0/1 (change model quality, medium is recommended)")
        GPS_Print("gposer exposure x (change exposure time, 0 for autoexposure and negative values for manual exposure time. use the preview to check it)")
        GPS_Print("gposer stop (stop)")
    end
end)

local pose_names = {"nose", "l_eye_inner", "l_eye", "l_eye_outer", "r_eye_inner", "r_eye", "r_eye_outer", "l_ear", "r_ear", "mouth_left", "mouth_right", "l_shoulder", "r_shoulder", "l_elbow", "r_elbow", "l_wrist", "r_wrist", "l_pinky", "r_pinky", "l_index", "r_index", "l_thumb", "r_thumb", "l_hip", "r_hip", "l_knee", "r_knee", "l_ankle", "r_ankle", "l_heel", "r_heel", "l_toe", "r_toe",}

local unfinished_frames = {}

GPoserState = GPoserState or "Unloaded"
GPoserInfo=GPoserInfo or ""

hook.Add("Think", "GPoserPoll", function()
    if not GPoserPoll then return end

    while true do
        local packet = GPoserPoll()

        if not packet then return end

        if istable(packet) then

            if packet.info then
                GPoserState = packet.state
                GPoserInfo = packet.info
                GPS_Print(GPoserState.. " ("..GPoserInfo..")")
                continue
            end



            local frame = {
                timestamp = packet.timestamp,
                landmark = setmetatable({}, {
                    __index = function() return Vector() end
                }),
                landmark_blend = setmetatable({}, {
                    __index = function() return 0 end
                })
            }

            if frame.timestamp > 9220372036854 then
                continue
            end

            
            -- print(frame.timestamp, SysTime())

            -- PrintTable(packet)

            for i,pos in ipairs(packet.pose_world or {}) do
            -- in input, x is L/R, y is up/down (negative up), z is fwd/back (negative fwd)
                -- use visiblity instead of presence, the difference is visiblity also considers occlusion
                -- multiply meters -> gmod units
                -- output x is forward for vec:angle, output z is up/down, output y is l/r
                local n = pose_names[i]
                frame.landmark[n] = pos*52 --Vector(-pos.z, pos.x, -pos.y) * 52
                frame.landmark_blend[n] = math.Clamp((packet.pose_visibility[i] - 0.4) * 5, 0, 1)
            end

            for i,pos in ipairs(packet.face or {}) do
                -- local x, y, z, blend = readlandmark(i)
                -- TODO see if visiblity/presence have anything?
                -- normalized landmarks arent in the same coordinate system but i think they are rotated the same (ortho/weak perspective)
                frame.landmark["f_" .. face_landmark_names[i]] = pos --Vector(-pos.z, pos.x, -pos.y)
            end

            for _,part in ipairs({"pose_local","l_hand","r_hand"}) do

                for i,pos in ipairs(packet[part] or {}) do
                    -- local x, y, z, blend = readlandmark(i)
                    -- TODO see if visiblity/presence have anything?
                    -- normalized landmarks arent in the same coordinate system but i think they are rotated the same (ortho/weak perspective)
                    frame.landmark["n_" .. part .. i] = pos --Vector(-pos.z, pos.x, -pos.y)
                end
            end

            GPS_LandmarkFrame(frame)

            continue
        end

        -- 0.1
        GPoserStatus = "Please update"
        GPoserInfo = "Please update"
        if not packet:StartWith("P ") then
            GPS_Print(packet)
            continue
        end

        data = (" "):Explode(packet)
        local packet_type, timestamp, landmarks = data[2], data[3], tonumber(data[4])
        local timestamp_n = tonumber(timestamp) / 1000000
        local frame = unfinished_frames[timestamp]

        if not frame then
            frame = {
                timestamp = timestamp_n,
                packets = {},
                landmark = setmetatable({}, {
                    __index = function() return Vector() end
                }),
                landmark_blend = setmetatable({}, {
                    __index = function() return 0 end
                })
            }

            unfinished_frames[timestamp] = frame
        end

        frame.packets[packet_type] = true

        -- weird skipped frame thing
        if packet_type == "frame" then
            frame.valid = landmarks == 1
        else
            local function readlandmark(i)
                local ptr = i * 4 + 1
                local vis = tonumber(data[ptr + 3])

                return tonumber(data[ptr]), tonumber(data[ptr + 1]), tonumber(data[ptr + 2]), vis and math.Clamp((vis - 0.4) * 5, 0, 1) or 1
            end

            if landmarks > 0 then
                if packet_type == "pose_world" then
                    -- assert(not frame.landmarks)
                    for i = 1, landmarks do
                        local ptr = i * 4 + 1
                        -- in input, x is L/R, y is up/down (negative up), z is fwd/back (negative fwd)
                        local x, y, z, blend = readlandmark(i)

                        if x and y and z and blend then
                            -- use visiblity instead of presence, the difference is visiblity also considers occlusion
                            -- multiply meters -> gmod units
                            -- output x is forward for vec:angle, output z is up/down, output y is l/r
                            local n = pose_names[i]
                            frame.landmark[n] = Vector(-z, x, -y) * 52
                            frame.landmark_blend[n] = blend
                        end

                        if i == landmarks then
                            assert(#data == ptr + 3)
                        end
                    end
                    -- print("asdf",#frame.landmarks)
                else
                    for i = 1, landmarks do
                        local x, y, z, blend = readlandmark(i)
                        -- TODO see if visiblity/presence have anything?
                        -- normalized landmarks arent in the same coordinate system but i think they are rotated the same (ortho/weak perspective)
                        frame.landmark["n_" .. packet_type:gsub("left_", "l_"):gsub("right_", "r_") .. i] = Vector(-z, x, -y)
                    end
                end
            end
        end

        -- imgsize, worldpose, localpose, rhand, lhand, face
        if frame.valid and table.Count(frame.packets) == 6 then
            GPS_LandmarkFrame(frame)
        end

        for k, v in pairs(unfinished_frames) do
            if v.timestamp < timestamp_n - 1 then
                unfinished_frames[k] = nil
            end
        end
    end
end)

GPS_MIN_TIME_GAP = 0.05

function GPS_LandmarkFrame(frame)
    if GPS_LatestLandmarkFrame and frame.timestamp <= GPS_LatestLandmarkFrame.timestamp then
        print("PREDROP", frame.timestamp, GPS_LatestLandmarkFrame.timestamp)

        return
    end

    GPS_LatestLandmarkFrame = frame
    local l = frame.landmark
    local lb = frame.landmark_blend

    local function blend(a, b, out)
        l[out] = (l[a] and l[b]) and (l[a] + l[b]) / 2 or Vector()
        lb[out] = math.min(lb[a], lb[b])
    end

    blend("l_ear", "r_ear", "head")
    blend("l_shoulder", "r_shoulder", "chest")
    blend("l_hip", "r_hip", "pelvis")
    -- if l.head and l.chest then print("NECK/SHOULDER", l.head:Distance(l.chest)/l.l_shoulder:Distance(l.r_shoulder)) end
    -- parameterization of landmarks
    -- try to stabilize the timestamp interval
    local t = SysTime()
    local ft

    while true do
        ft = math.max((GPS_LAST_FRAMETIME or 0) + GPS_MIN_TIME_GAP, t)

        if ft - t > 0.1 then
            GPS_MIN_TIME_GAP = GPS_MIN_TIME_GAP * 0.9
        else
            break
        end
    end

    local frame_deltatime = GPS_LAST_FRAMETIME and ft - GPS_LAST_FRAMETIME or 0
    GPS_LAST_FRAMETIME = ft
    local p = GPS_EmptyFrame(ft) --frame.timestamp)
    local pb = p.weight
    frame.param, frame.param_weight = p, pb
    -- todo remove global position too
    -- x,y,angle
    -- local shouldertwist = l.l_shoulder - l.r_shoulder
    -- p.angle = LerpAngle(lb.chest, Angle(), Angle(0, math.deg(math.atan2(shouldertwist.x, shouldertwist.y)), 0))
    local hiptwist = l.l_hip - l.r_hip
    p.angle = Angle(0, math.deg(math.atan2(hiptwist.x, hiptwist.y)), 0)
    pb.angle = lb.pelvis
    p.posx, p.posy, p.posz = 0, 0, 0
    local localpelvis1, localpelvis2 = rawget(l, "n_pose_local24"), rawget(l, "n_pose_local25")

    if localpelvis1 and localpelvis2 then
        local localpelvis = (localpelvis1 + localpelvis2) - 1
        -- this like estimates the distance from camera
        localpelvis.x = 0 ---0.2/localpelvis1:Distance(localpelvis2)
        -- print( localpelvis1:Distance(localpelvis2) )
        local distancemod = 3.5 / localpelvis1:Distance(localpelvis2)
        -- print(distancemod)
        p.posy = localpelvis.y * distancemod

        -- move up/down when we deviate from the running value
        if not GPS_PelvisAvg then
            GPS_PelvisAvg = Vector(localpelvis)
        end

        GPS_PelvisAvg.x = math.Approach(GPS_PelvisAvg.x, localpelvis.x, frame_deltatime * 0.2)
        GPS_PelvisAvg.z = math.Approach(GPS_PelvisAvg.z, localpelvis.z, frame_deltatime * 0.2)
        -- TODO calculate the multiplier based on left/right hip distance
        p.posx = (localpelvis.x - GPS_PelvisAvg.x) * distancemod
        p.posz = math.tanh(((localpelvis.z - GPS_PelvisAvg.z) * distancemod) / 8) * 12
        -- p.posx = localpelvis1 and localpelvis2 and lb.pelvis*(localpelvis1.x + localpelvis2.x-1)*30 or 0
        pb.posx = lb.pelvis
        pb.posy = lb.pelvis
        pb.posz = lb.pelvis
    end

    -- TODO shoulder twist (on vertical axis as well as forward axis)
    local m = Matrix()
    m:SetAngles(p.angle)
    -- m:Rotate(Angle(0,30,0)) -- monitor - webcam offset
    frame.landmark_orig = l
    l = {}
    frame.landmark = l

    for k, v in pairs(frame.landmark_orig) do
        l[k] = m * v
    end

    if lb.chest > 0 then
        p.shoulders = (l.l_shoulder - l.r_shoulder):GetNormalized()
        pb.shoulders = lb.chest
    end

    if rawget(l, "f_top") then
        local up,side = l.f_top - l.f_bottom, l.f_left - l.f_right
        p.a_head = side:Cross(up):AngleEx(up)
        pb.a_head = 1

        local normalizer = Matrix()
        
        normalizer:SetScale(Vector(1,1,1)* side:Length()/2)
        normalizer:SetAngles(p.a_head)
        normalizer:SetTranslation((l.f_left +l.f_right)/2)
        normalizer = normalizer:GetInverse()

        GPS_NormalizedFace = {}
        local i=0
        while true do
            local v=l["f_L"..i]
            if not v then break end
            table.insert(GPS_NormalizedFace, normalizer * v)
            i=i+1
        end

        if not GPS_FlexRegression then
            
            local X,Y = { },{}

            local numtargets = #GPS_FlexRegressionTargets
            for k,face in pairs(GPS_ExpressionFace) do
                table.insert(X,GPS_FaceFeatures(face) )
                
                local yrow = {}
                table.insert(Y, yrow)
                
                for col=1,numtargets do 
                    yrow[col]=0
                end
                
                for flex,weight in pairs(GPS_Expressions[k]) do
                    yrow[GPS_FlexRegressionTargetIndex[flex]]=weight
                end
            end

            GPS_FlexRegression = GPoserLeastSquares(X,Y, 0.001)
            
            print("Computed regression matrix of shape", #GPS_FlexRegression, #GPS_FlexRegression[1])
        end

        if GPS_FlexRegression and GPS_NormalizedFace[2] then
            local features = GPS_FaceFeatures(GPS_NormalizedFace)
            local weights = {}

            for i,f in ipairs(features) do
                local fweights = GPS_FlexRegression[i]
                for j,fw in ipairs(fweights) do
                    weights[j] = (weights[j] or 0) + f*fw
                end
            end

            GPS_EXPRESSIONHACK = {}

            for i,w in ipairs(weights) do
                local id = Me:GetFlexIDByName(GPS_FlexRegressionTargets[i])
                if id then
                    p["f_"..id] = w
                    pb["f_"..id]=1
                end
            end

        end

    else
        pb.a_head = math.min(lb.head, lb.nose)

        if pb.a_head > 0 then
            p.a_head = (l.nose - l.head):AngleEx((l.nose - l.head):Cross(l.l_ear - l.r_ear))
            p.a_head:RotateAroundAxis(p.a_head:Right(), 10)
        end
    end

    p.neck = (l.head - l.chest):GetNormalized()
    pb.neck = math.min(lb.head, lb.chest)
    p.v_body = (l.chest - l.pelvis):GetNormalized()
    pb.v_body = math.min(lb.chest, lb.pelvis)

    for _, s in ipairs({"l", "r"}) do
        local prob = math.min(lb[s .. "_elbow"], lb[s .. "_shoulder"])

        if prob > 0 then
            p[s .. "_shoulder_elbow"] = (l[s .. "_elbow"] - l[s .. "_shoulder"]):GetNormalized()
            pb[s .. "_shoulder_elbow"] = prob
            prob = math.min(prob, lb[s .. "_wrist"])

            if prob > 0 then
                p[s .. "_elbow_wrist"], p[s .. "_shoulder_wrist"] = (l[s .. "_wrist"] - l[s .. "_elbow"]):GetNormalized(), (l[s .. "_wrist"] - l[s .. "_shoulder"]):GetNormalized()
                pb[s .. "_shoulder_wrist"], pb[s .. "_elbow_wrist"] = prob, prob
                prob = math.min(prob, lb[s .. "_index"])
                local hk = "n_" .. s .. "_hand"
                local root = rawget(l, hk .. "1")

                if root then
                    wrist_middle = l[hk .. "10"] - root
                    p[s .. "_hand"] = wrist_middle:AngleEx(wrist_middle:Cross(l[hk .. "18"] - root))
                    pb[s .. "_hand"] = prob

                    for finger = 0, 4 do
                        for segment = 2, 4 do
                            local key = s .. "_hand_" .. finger .. "" .. segment
                            p[key] = (l[hk .. finger * 4 + segment + 1] - (segment == 1 and root or l[hk .. finger * 4 + segment])):GetNormalized()
                            pb[key] = prob
                        end
                    end
                end

                if prob > 0 then
                    p[s .. "_wrist_index"] = (l[s .. "_index"] - l[s .. "_wrist"]):GetNormalized() -- the pose model can't track wrist twisting well but it can somewhat do a vector rotation
                    pb[s .. "_wrist_index"] = prob
                end
            end
        end

        local prob = math.min(lb[s .. "_knee"], lb[s .. "_hip"])

        if prob > 0 then
            p[s .. "_hip_knee"] = (l[s .. "_knee"] - l[s .. "_hip"]):GetNormalized()
            pb[s .. "_hip_knee"] = prob
            prob = math.min(prob, lb[s .. "_ankle"])

            if prob > 0 then
                p[s .. "_knee_ankle"] = (l[s .. "_ankle"] - l[s .. "_knee"]):GetNormalized()
                pb[s .. "_knee_ankle"] = prob
                prob = math.min(prob, lb[s .. "_toe"])

                if prob > 0 then
                    p[s .. "_ankle_toe"] = (l[s .. "_toe"] - l[s .. "_ankle"]):GetNormalized()
                    pb[s .. "_ankle_toe"] = prob
                end
            end
        end
    end

    if not GPS_ServerForced then
        Me:GPS_AddFrame(p)
    end

    net.Start("GPoser", true)
    GPS_WriteFrame(p)
    net.SendToServer()

    if GPS_ExportFormat then
        for k, v in pairs(p) do
            GPS_ExportFormat[k] = type(v)
        end
    end
end

net.Receive("GPoser", function(len)
    local ply = net.ReadEntity()
    if not IsValid(ply) then return end
    local f = GPS_ReadFrame()

    -- print("RECV",f.timestamp)
    if ply ~= Me or GPS_ServerForced then
        ply:GPS_AddFrame(f)
    end
end)

function GPS_Export()
    GPS_ExportFormat = {}

    timer.Simple(3, function()
        out = {}

        for k, v in pairs(GPS_ExportFormat) do
            table.insert(out, {k, v})
        end

        SetClipboardText(util.TableToJSON(out))
        GPS_ExportFormat = nil
    end)
end

local function lerp(t, a, b)
    if a == nil then return b end
    if b == nil then return a end
    if isnumber(a) then return Lerp(t, a, b) end
    if isangle(a) then return LerpAngle(t, a, b) end
    if isvector(a) then return LerpVector(t, a, b):GetNormalized() end
    assert(false)
end

-- so it resets on file save
for k, v in pairs(player.GetAll()) do
    v.GPS_Frames = nil
    v.GPS_Lateness = nil
end

function Entity:GPS_SmoothedFrame()
    if self.GPS_SmoothedFrameCacheFrame ~= FrameNumber() then
        self.GPS_SmoothedFrameCacheFrame = FrameNumber()
        self.GPS_SmoothedFrameCache = self:GPS_Do_SmoothedFrame()
    end

    return self.GPS_SmoothedFrameCache
end

function Entity:GPS_Do_SmoothedFrame()
    if not self.GPS_Frames then return GPS_EmptyFrame() end

    if self.GPS_LatenessFramenumber ~= FrameNumber() then
        self.GPS_LatenessFramenumber = FrameNumber()
        self.GPS_Lateness = math.Approach(self.GPS_Lateness, self.GPS_TargetLateness, FrameTime() * 0.2)
    end

    local timestamp = SysTime() - self.GPS_Lateness
    local prev_frame, next_frame

    for i, v in ipairs(self.GPS_Frames) do
        if v.timestamp > timestamp then
            next_frame = v
            break
        else
            prev_frame = v
        end
    end

    -- print("NOPREV")
    if not prev_frame then return next_frame or GPS_EmptyFrame() end

    if not next_frame then
        next_frame = GPS_EmptyFrame(prev_frame.timestamp + 0.5)
        if next_frame.timestamp <= timestamp then return next_frame end
    end

    assert(prev_frame and next_frame and prev_frame.timestamp <= timestamp and next_frame.timestamp > timestamp)
    local lerpval = (timestamp - prev_frame.timestamp) / (next_frame.timestamp - prev_frame.timestamp)
    -- print(timestamp, prev_frame.timestamp, next_frame.timestamp, lerpval)
    local sframe = GPS_EmptyFrame()

    for _, tab in ipairs({prev_frame, next_frame}) do
        for k, v in pairs(tab) do
            if not sframe[k] then
                local w1, w2 = prev_frame.weight[k] * (1 - lerpval), next_frame.weight[k] * lerpval
                local total = w1 + w2

                if total > 0 then
                    local weightedlerp = w2 / total
                    sframe[k] = lerp(weightedlerp, prev_frame[k], next_frame[k])
                    sframe.weight[k] = lerp(weightedlerp, prev_frame.weight[k], next_frame.weight[k])
                end
            end
        end
    end

    return sframe
end

function Entity:GPS_AddBoneCallback(proxy)
    self.GPS_Proxy = proxy

    if not self.GPS_AddedCallback then
        -- goes through a wrapper func so we can edit the global
        self:AddCallback("BuildBonePositions", function(ent, nb)
            GPS_BuildBonePositions(ent, nb)
        end)

        self:AddCallback("BuildFlexWeights", function(ent, nf,data)
            return GPS_BuildFlexWeights(ent, nf, data)
        end)

        self.GPS_AddedCallback = true
    end
end

function Entity:GPS_AddFrame(frame)
    assert(frame.timestamp)
    self.GPS_Frames = self.GPS_Frames or {}
    self.GPS_FrameLateness = self.GPS_FrameLateness or {}
    -- expect them to arrive in order
    local prev_frame = self.GPS_Frames[1] and self.GPS_Frames[#self.GPS_Frames]

    if prev_frame and prev_frame.timestamp >= frame.timestamp then
        print("DROP")

        return
    end

    table.insert(self.GPS_Frames, frame)

    -- todo: add hands/whatever else from previous frame (subtract time difference from weight). also flow forward from this frame to later ones
    -- remove any frame over 2sec old
    while self.GPS_Frames[1] and self.GPS_Frames[1].timestamp < frame.timestamp - 2 do
        table.remove(self.GPS_Frames, 1)
    end

    local second_to_last_frame = self.GPS_Frames[math.max(1, #self.GPS_Frames - 1)]
    table.insert(self.GPS_FrameLateness, SysTime() - second_to_last_frame.timestamp)

    while self.GPS_FrameLateness[11] do
        table.remove(self.GPS_FrameLateness, 1)
    end

    self.GPS_TargetLateness = math.max(unpack(self.GPS_FrameLateness)) + 0.01 --add a lil bit to make it smoother maybe
    self.GPS_Lateness = self.GPS_Lateness or self.GPS_TargetLateness
    -- print(self.GPS_Lateness)
    -- local timestamp = SysTime() - self.GPS_Lateness
    -- while self.GPS_Frames[2] and self.GPS_Frames[2].timestamp<timestamp do
    --     table.remove(self.GPS_Frames, 1)
    -- end
    -- keep the interpolation going from where we left off if fps isnt totally stable (which its not)
    -- self.GPS_PrevFrame = self:GPS_SmoothedFrame()
    -- self.GPS_Frame = frame
    -- self.GPS_FrameTime = SysTime()
    local sec = math.floor(CurTime() / 5)

    if sec ~= self.GPS_LastSec then
        self.GPS_LastSec = sec
        self.GPS_FPS = self.GPS_SecFrames
        self.GPS_SecFrames = 0

        if self == LocalPlayer() and self.GPS_FPS then
            GPS_Print("FPS: " .. tostring(math.Round(self.GPS_FPS / 5)))
        end
    end

    self.GPS_SecFrames = self.GPS_SecFrames + 1
    self:GPS_AddBoneCallback()
end

local function rot_mat(angle)
    local m = Matrix()
    m:SetAngles(angle)

    return m
end

local function vec_rot_mat(a, b)
    a, b = a:GetNormalized(), b:GetNormalized()
    local out = Angle()
    local cross = a:Cross(b)
    local len = cross:Length()

    if len > 0.0001 then
        out:RotateAroundAxis(cross / len, math.deg(math.acos(a:Dot(b))))
    end

    return rot_mat(out)
end

local function vec_angle(a, b)
    a, b = a:GetNormalized(), b:GetNormalized()

    return math.acos(a:Dot(b))
end

function GPS_BuildBonePositions(ent, nb)
    local bbp_pos = (ent:GetBoneMatrix(0) or Matrix()):GetTranslation()
    local bbp_fn = FrameNumber()

    if bbp_fn ~= ent.GPS_BBPFn or bbp_pos ~= ent.GPS_BBPPos then
        local param = (ent.GPS_Proxy or ent):GPS_SmoothedFrame()
        if table.IsEmpty(param) then return end

        local param_weight = param.weight
        local emat = Matrix()
        -- emat:SetScale(ent:GetModelScale()*Vector(1,1,1))
        local ang = Angle(0, (ent:IsPlayer() and (ent:InVehicle() and ent:GetVehicle():GetAngles() or ent:EyeAngles()) or ent:GetAngles()).y, 0)

        if ent == LocalPlayer() and ent:InVehicle() then
            ang:RotateAroundAxis(Vector(0, 0, 1), 90)
        end

        emat:SetAngles(ang)
        emat:SetTranslation(ent:GetPos())
        local root_tf = emat:GetInverse()
        if not root_tf then return end
        local bone_lookup = {}

        for i = 0, nb - 1 do
            local ezname = ent:GetBoneName(i):gsub("ValveBiped.Bip01_", ""):lower()
            bone_lookup[ezname] = i
            bone_lookup[i] = ezname
        end

        local bone_parent = setmetatable({}, {
            __index = function(self, k)
                local i = bone_lookup[k]
                local p = i and ent:GetBoneParent(i) or -1

                if p ~= -1 then
                    p = bone_lookup[p]
                    self[k] = p

                    return p
                end
            end
        })

        local input_mat = setmetatable({}, {
            __index = function(self, k)
                local bi = bone_lookup[k]
                assert(not isstring(bi))
                local mat = bi and ent:GetBoneMatrix(bi) or Matrix()
                self[k] = mat

                return mat
            end
        })

        local input_pos = setmetatable({}, {
            __index = function(self, k)
                local pos = input_mat[k]:GetTranslation()
                self[k] = pos

                return pos
            end
        })

        local delta_mat = setmetatable({}, {
            __index = function(self, k)
                -- note that we do not SET anything here
                local parent = bone_parent[k]

                return parent and self[parent] or root_tf
            end
        })

        local function checknormalized(vec)
            local l = vec:LengthSqr()
            assert(l > 0.999 and l < 1.001)
        end

        local function local_bm(bn)
            assert(delta_mat[bn] ~= false)

            return delta_mat[bn] * input_mat[bn]
        end

        local function local_pos(bn)
            assert(delta_mat[bn] ~= false)

            return delta_mat[bn] * input_pos[bn]
        end

        local function local_ang(bn)
            return local_bm(bn):GetAngles()
        end

        local function target_vector(bone, from, to_param, softness, fallback_target)
            if param_weight[to_param] == 0 and not fallback_target then return end
            from:Normalize()
            local blend = param_weight[to_param] * (softness or 1)
            local lerptarget = blend > 0 and param[to_param]:GetNormalized() or Vector()
            local to = LerpVector(blend, fallback_target or from, lerptarget):GetNormalized()
            local cross = from:Cross(to)
            local len = cross:Length()
            if len < 0.0001 then return end
            local ang = Angle()
            ang:RotateAroundAxis(cross / len, math.deg(math.acos(from:Dot(to))))
            local old_pos = local_pos(bone)
            delta_mat[bone] = rot_mat(ang) * delta_mat[bone]
            delta_mat[bone]:SetTranslation(delta_mat[bone]:GetTranslation() + old_pos - local_pos(bone))
        end

        local function set_ang(bn, ang)
            local mat = local_bm(bn)
            mat:SetAngles(ang)
            local inv = input_mat[bn]:GetInverse()
            if not inv then return end
            delta_mat[bn] = mat * inv
        end

        local function target_angle(bone, from, to_param)
            if param_weight[to_param] == 0 then return end
            local ifrom = rot_mat(from):GetInverse()
            if not ifrom then return end
            local to = LerpAngle(param_weight[to_param], from, param[to_param])
            set_ang(bone, (rot_mat(to) * ifrom * local_bm(bone)):GetAngles())
        end

        if bone_lookup[0] == "lrigpelvis" then
            target_angle("lrigscull", (rot_mat(local_ang("lrigscull")) * rot_mat(Angle(0, 0, 90))):GetAngles(), "a_head")
            -- TODO pony
        else
            -- needs a bit more work to get guns to not hold weird (the hands get twisted)
            local base_upperarm_forearm, base_forearm_hand, base_foot_calf = {}, {}, {}

            for _, s in ipairs({"l", "r"}) do
                base_upperarm_forearm[s] = (local_pos(s .. "_forearm") - local_pos(s .. "_upperarm")):GetNormalized()
                base_forearm_hand[s] = (local_pos(s .. "_hand") - local_pos(s .. "_forearm")):GetNormalized()
                base_foot_calf[s] = (local_pos(s .. "_foot") - local_pos(s .. "_calf")):GetNormalized()
            end

            target_vector("spine", local_pos("l_clavicle") - local_pos("r_clavicle"), "shoulders", 0.3)
            target_vector("spine", local_pos("neck1") - local_pos("spine"), "v_body", 0.4)
            target_vector("spine2", local_pos("l_clavicle") - local_pos("r_clavicle"), "shoulders", 0.5)
            target_vector("spine2", local_pos("neck1") - local_pos("spine2"), "v_body", 0.6)
            target_vector("spine4", local_pos("l_clavicle") - local_pos("r_clavicle"), "shoulders")
            target_vector("spine4", local_pos("neck1") - local_pos("spine4"), "v_body")
            target_vector("neck1", local_pos("head1") - local_pos("neck1"), "neck")
            target_angle("head1", (rot_mat(local_ang("head1")) * rot_mat(Angle(0, -90, -90))):GetAngles(), "a_head")

            for _, s in ipairs({"l", "r"}) do
                target_vector(s .. "_upperarm", local_pos(s .. "_forearm") - local_pos(s .. "_upperarm"), s .. "_shoulder_elbow", false, base_upperarm_forearm[s])
                target_vector(s .. "_forearm", local_pos(s .. "_hand") - local_pos(s .. "_forearm"), s .. "_elbow_wrist", false, base_forearm_hand[s])
                target_vector(s .. "_hand", local_pos(s .. "_finger1") - local_pos(s .. "_hand"), s .. "_wrist_index")
                local wrist_middle = local_pos(s .. "_finger2") - local_pos(s .. "_hand")
                target_angle(s .. "_hand", wrist_middle:AngleEx(wrist_middle:Cross(local_pos(s .. "_finger4") - local_pos(s .. "_hand"))), s .. "_hand")

                for finger = 0, 4 do
                    for segment = 2, 4 do
                        local bn = s .. "_finger" .. finger .. "" .. (segment > 2 and segment - 2 or "")
                        target_vector(bn, local_ang(bn):Forward(), s .. "_hand_" .. finger .. "" .. segment)
                    end
                end

                -- local near_angle = vec_angle(fparam[s.."_shoulder_elbow"], fparam[s.."_shoulder_wrist"])
                -- local lawofsines = local_pos(s.."_forearm"):Distance(local_pos(s.."_hand"))/math.sin( near_angle)
                -- local far_angle = math.asin( local_pos(s.."_upperarm"):Distance(local_pos(s.."_forearm"))/lawofsines )
                -- local elbow_angle = math.pi - (near_angle + far_angle)
                -- local shoulder_hand_dist = lawofsines * math.sin(elbow_angle)
                -- local hand_pos = local_pos(s.."_upperarm") + fparam[s.."_shoulder_wrist"] * shoulder_hand_dist
                -- set_ang(s.."_forearm", (vec_rot_mat( local_pos(s.."_hand")-local_pos(s.."_forearm"), hand_pos-local_pos(s.."_forearm") ) * local_bm(s.."_forearm")):GetAngles() )
                target_vector(s .. "_thigh", local_pos(s .. "_calf") - local_pos(s .. "_thigh"), s .. "_hip_knee") -- (vec_rot_mat(cparam[s.."_hip_knee"], fparam[s.."_hip_knee"]) * local_bm(s.."_thigh")):GetAngles() )
                target_vector(s .. "_calf", local_pos(s .. "_foot") - local_pos(s .. "_calf"), s .. "_knee_ankle", false, base_foot_calf[s])
                -- target_vector(s.."_foot", local_pos(s.."_toe0") - local_pos(s.."_foot"), s.."_ankle_toe")
                target_vector(s .. "_foot", local_ang(s .. "_foot"):Forward(), s .. "_ankle_toe")
            end
        end

        -- this will apply the whole body transform
        -- todo make sure feet dont move z (too much)
        local root_moved = false

        if not ent:IsPlayer() or not ent:InVehicle() then
            if param_weight.posx > 0 then
                root_moved = true
                emat:SetTranslation(emat * (param_weight.posx * Vector(param.posx, param.posy, param.posz)))
            end

            if param_weight.angle > 0 then
                root_moved = true
                emat = emat * rot_mat(LerpAngle(param_weight.angle, Angle(), param.angle)):GetInverse()
            end
        end

        for k, v in pairs(delta_mat) do
            delta_mat[k] = emat * v
        end

        -- will get returned by delta_mat
        root_tf = root_moved and emat * root_tf or false
        ent.GPS_BBPPos = bbp_pos
        ent.GPS_BBPFn = bbp_fn
        ent.GPS_BBPCache = {}

        for i = 0, nb - 1 do
            local bn = bone_lookup[i]
            local delta = delta_mat[bn]

            if delta ~= false then
                if ent:GetBoneContents(i) ~= 0 then
                    ent.GPS_BBPCache[i] = delta * input_mat[bn]
                end
            end
        end


        -- flex setup, BuildFlexWeights is scuffed
        ent.GPS_FlexFrame = FrameNumber()
        local maxscale = 2
        ent:SetFlexScale(maxscale)
        local flexestoapply = {}
        for i=0,ent:GetFlexNum()-1 do
            local flex="f_"..i
            local w = (param[flex] or 0) * (param_weight[flex] or 0)
            -- local min,max = ent:GetFlexBounds(i)
            if GPOSER_TESTFLEX then
                ent:SetFlexWeight(i, (GPOSER_TESTFLEX[i] or 0)/maxscale )
            else
                ent:SetFlexWeight(i, math.Clamp(w/maxscale, 0, 1))
            end
        end
    end

    for k, v in pairs(ent.GPS_BBPCache) do
        ent:SetBoneMatrix(k, v)
    end

    if ent.GPSFirstPerson then
        local head = ent:LookupBone("ValveBiped.Bip01_Head1")
        if head then
            local ofs = EyePos() - ent:GetBoneMatrix(head):GetTranslation()

            for i=0,ent:GetBoneCount()-1 do
                local m = ent:GetBoneMatrix(i)
                if  m then 
                m:SetTranslation(m:GetTranslation()+ofs)
                ent:SetBoneMatrix(i,m)
                end
            end
        end
        local bn = ent:LookupBone("ValveBiped.Bip01_Neck1")
        local pos = nil
        local function shrink(bn)
            local m = ent:GetBoneMatrix(bn)
            if m then
            pos = pos or m:GetTranslation()
            m:SetScale(Vector(0.01,0.01,0.01))
            m:SetTranslation(pos)
            ent:SetBoneMatrix(bn, m)
            for i,v in ipairs(ent:GetChildBones(bn)) do
                shrink(v)
            end
        end
        end
        if bn then shrink(bn) end
    end

end

function GPS_BuildFlexWeights(ent, nf, data)
    

    -- local param = (ent.GPS_Proxy or ent):GPS_SmoothedFrame()
    -- if table.IsEmpty(param) then return end

    -- if ent==Me then 
    --     -- print(ent:GetFlexNum(), table.Count(data))
    --     -- for i,d in pairs(data) do
        
    --     for i=0,ent:GetFlexNum()-1 do
    --         local n = ent:GetFlexName(i)

    --         print(i,n)
    --         if FLEXES[n] then
    --             local min,max = ent:GetFlexBounds(i)

    --             data[i-2] = math.sin(SysTime())+1
    --             -- print("SET", i, n, min,max, data[i])
    --             ent:SetFlexWeight(i, math.sin(SysTime())+1 )
    --         end


    --     --     -- print(i, ent:GetFlexName(i), d) 

    --     --     -- if ent:GetFlexName(i)=="jaw_drop" then
                
    --     --         local min,max = 0,1 --ent:GetFlexBounds(i)
    --     --         if max then
    --     --             data[i] = min+(math.sin(SysTime())+1)/(2*(max-min))
    --                 -- print("SET", i, ent:GetFlexName(i), data[i])
    --     --         else
    --     --             print("BAD", i, ent:GetFlexName(i))
    --     --         end

    --     --     -- end
    --     end

    --     -- A_SetFlexWeight(ply, 27, open)
    --     -- A_SetFlexWeight(ply, 28, open)
    --     -- A_SetFlexWeight(ply, 39, open)
    --     -- A_SetFlexWeight(ply, 40, open)
    --     -- A_SetFlexWeight(ply, 41, open)

    --     -- data[39] = math.sin(SysTime())+1
    --     -- data[40] = data[39]
    --     -- data[41] = data[39]

    -- end

    -- return data
end


    -- local f = Me:GPS_SmoothedFrame()

    -- if Me:GetRank()<9 then return end

    -- for k,v in pairs(f) do
    --     if k:StartWith("nf_") then
    --         -- tostring(tonumber(k:sub(7))-1)
    --         local scl = ScrH()/2
    --         draw.SimpleText(k:sub(4), "DermaDefault", ScrW()/2 - v.y*scl, ScrH()/2 - v.z*scl, color_white)
    --     end
    -- end
hook.Add("HUDPaint", "gposerdebug", function() 



end) -- if not GPS_LatestLandmarkFrame then return end -- draw.SimpleText( "GPoser FPS: "..tostring(Me.GPS_FPS), "DermaDefault", 0, 0, color_white ) -- local x,s = 100, 500 -- surface.SetDrawColor(255,255,255,255) -- surface.DrawLine(x,x,x+s,x) -- surface.DrawLine(x,x,x,x+s) -- surface.DrawLine(x+s,x+s,x,x+s) -- surface.DrawLine(x+s,x+s,x+s,x) -- render.SetScissorRect(x,x,x+s,x+s,true) -- for k,v in pairs(GPS_LatestLandmarkFrame.landmark_orig) do --     if k:StartWith("n_") then --         surface.DrawRect(x+(v.y)*s-1,x+(-v.z)*s-1,2,2) --     end -- end -- render.SetScissorRect(0,0,0,0,false)

hook.Add("PostDrawTranslucentRenderables", "GPdebug", function(d, s, s3)
    if true then return end
    if not Me and Me:GetRank() == 9 then return end
    -- if not GPOSERFRAME then return end
    -- local l,lb = Me..landmark,GPOSERFRAME.landmark_blend
    local skel = GP_ReferenceSkeleton()

    for k, v in pairs(skel) do
        if v.parent then
            render.DrawLine(v.pos, skel[v.parent].pos)
            render.DrawLine(v.pos, v.pos + Vector(0, 0, 1), Color(255, 0, 0))
            cam.Start3D2D(v.pos, Angle(0, 0, 0), 0.05)
            draw.SimpleText(k, "DermaDefault", 0, 0, color_white)
            cam.End3D2D()
        end
    end

    if not GPS_LatestLandmarkFrame then return end

    landmark_parent = {
        nose = "head",
        l_ear = "head",
        r_ear = "head",
        head = "chest",
        l_shoulder = "chest",
        l_elbow = "l_shoulder",
        l_wrist = "l_elbow",
        l_pinky = "l_wrist",
        l_index = "l_wrist",
        l_thumb = "l_wrist",
        r_shoulder = "chest",
        r_elbow = "r_shoulder",
        r_wrist = "r_elbow",
        r_pinky = "r_wrist",
        r_index = "r_wrist",
        r_thumb = "r_wrist",
        chest = "pelvis",
        l_hip = "pelvis",
        l_knee = "l_hip",
        l_ankle = "l_knee",
        l_heel = "l_ankle",
        l_toe = "l_heel",
        r_hip = "pelvis",
        r_knee = "r_hip",
        r_ankle = "r_knee",
        r_heel = "r_ankle",
        r_toe = "r_heel",
    }

    local frame = GPS_LatestLandmarkFrame.landmark --Me:GPS_SmoothedFrame()
    local weight = GPS_LatestLandmarkFrame.landmark_blend

    for k, v in pairs(frame) do
        -- print(k,v)
        local p = landmark_parent[k]

        if p and frame[p] then
            local c = Vector(0, -100, 40)
            render.DrawLine(v + c, frame[p] + c, Color(255, 255, 255, (weight[k] + weight[p]) * 128))
        end
    end
end)

local FirstpersonCvar = CreateClientConVar("gposer_firstperson", "1", true, false)

hook.Add("ShouldDrawLocalPlayer","GPS_ShouldDrawLocalPlayer",function(ply)
    if not FirstpersonCvar:GetBool() then return end
    if not table.IsEmpty(ply:GPS_SmoothedFrame() or {}) and not THIRDPERSON then 

        ply.GPSFirstPerson = true
        
        hook.Add("PrePlayerDraw","GPS",function(ply)
            if ply==Me then
                hook.Add("PostPlayerDraw", "GPS", function(ply)
                    assert( ply==Me )
                    ply.GPSFirstPerson = nil
                    hook.Remove("PostPlayerDraw","GPS")
                end)
                hook.Remove("PrePlayerDraw","GPS")
            end
        end)
    
        return true 
    end
end)


local reference_skeleton = nil

function GP_ReferenceSkeleton()
    if reference_skeleton then return reference_skeleton end
    local e = ClientsideModel("models/player/kleiner.mdl", RENDERGROUP_OTHER)
    -- local e = ClientsideModel("models/ppm/player_default_base.mdl", RENDERGROUP_OTHER)
    e:SetPos(Vector(0, 0, 0))
    e:SetAngles(Angle(0, 0, 0))
    e:SetupBones()
    -- local _, bones = util.GetModelMeshes("models/player/kleiner.mdl")
    reference_skeleton = {}

    for i = 0, e:GetBoneCount() - 1 do
        local bn = e:GetBoneName(i)
        local m = e:GetBoneMatrix(i)
        local p = e:GetBoneParent(i)

        reference_skeleton[bn] = {
            mat = m,
            pos = m:GetTranslation(),
            ang = m:GetAngles(),
            imat = m:GetInverse(),
            parent = p > -1 and e:GetBoneName(p) or nil
        }
    end

    e:Remove()

    return reference_skeleton
end
--NOMINIFY

